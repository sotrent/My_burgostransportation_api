! function (u, o, r, t) {
    var e = function (t, e) {
        this.elem = t, this.$elem = u(t), this.options = e, this.metadata = this.$elem.data("plugin-options")
    };
    e.defaults = (e.prototype = {
        public: function () {
            return {
                startDate: moment(),
                endDate: moment(),
                format: "L LT",
                dateSeparator: " - ",
                calendarCount: 2,
                inline: !1,
                minDate: null,
                maxDate: null,
                showHeader: !0,
                showFooter: !0,
                rangeOrientation: "horizontal",
                verticalRangeWidth: 180,
                showTimePickers: !0,
                showCalendars: !0,
                showButtons: !1,
                minHour: 9,
                maxHour: 18,
                hourFormat: 12,
                minuteSteps: 1,
                startOnMonday: !1,
                container: "body",
                oneCalendarWidth: 230,
                enableKeyboard: !0,
                showOn: "bottom",
                arrowOn: "left",
                autoAlign: !0,
                locale: moment.locale(),
                singleDate: !1,
                target: null,
                autoCloseOnSelect: !1,
                startEmpty: !1,
                ranges: [{
                    title: "Today",
                    startDate: moment().startOf("day"),
                    endDate: moment().endOf("day")
                }, {
                    title: "3 Days",
                    startDate: moment().startOf("day"),
                    endDate: moment().add(2, "days").endOf("day")
                }, {
                    title: "5 Days",
                    startDate: moment().startOf("day"),
                    endDate: moment().add(4, "days").endOf("day")
                }, {
                    title: "1 Week",
                    startDate: moment().startOf("day"),
                    endDate: moment().add(6, "days").endOf("day")
                }, {
                    title: "Till Next Week",
                    startDate: moment().startOf("day"),
                    endDate: moment().endOf("week").endOf("day")
                }, {
                    title: "Till Next Month",
                    startDate: moment().startOf("day"),
                    endDate: moment().endOf("month").endOf("day")
                }],
                rangeLabel: "Ranges: ",
                cancelLabel: "Cancel",
                applyLabel: "Apply",
                onbeforeselect: function () {
                    return !0
                },
                onafterselect: function () { },
                onbeforeshow: function () { },
                onbeforehide: function () { },
                onaftershow: function () { },
                onafterhide: function () { },
                onfirstselect: function () { },
                onrangeselect: function () { },
                onbeforemonthchange: function () {
                    return !0
                },
                onaftermonthchange: function () { },
                onafteryearchange: function () { },
                ondraw: function () { },
                oninit: function () { },
                ontimechange: function () { },
                disableDays: function () {
                    return !1
                },
                disabledRanges: [],
                continuous: !1,
                enableMonthSwitcher: !0,
                monthSwitcherFormat: "MMMM",
                enableYearSwitcher: !0,
                numericMonthSelector: !1,
                reverseTimepickerArrows: !1,
                showWeekNumbers: !1
            }
        },
        private: function () {
            return {
                startSelected: !1,
                currentDate: moment(),
                endSelected: !0,
                hoverDate: null,
                keyboardHoverDate: null,
                headerStartDay: null,
                headerStartDate: null,
                headerStartWeekday: null,
                headerEndDay: null,
                headerEndDate: null,
                headerEndWeekday: null,
                swipeTimeout: null,
                isMobile: !1,
                valElements: ["BUTTON", "OPTION", "INPUT", "LI", "METER", "PROGRESS", "PARAM"],
                dontHideOnce: !1,
                initiator: null,
                initComplete: !1,
                startDateBackup: null,
                firstValueSelected: !1,
                startDateInitial: null,
                endDateInitial: null,
                startScrolling: !1,
                lastScrollDirection: "bottom",
                throttleTimeout: null,
                documentEvent: null,
                delayInputUpdate: !1,
                startTimeBackup: null,
                endTimeBackup: null,
                mouseTimer: !1,
                preventMouseClick: !1,
                lastScrollX: 0,
                lastScrollY: 0,
                isTicking: !1,
                parentScrollEventsAttached: !1,
                rafID: 0
            }
        },
        init: function () {
            return this.config = u.extend({}, this.public(), this.options, this.metadata), this.globals = u.extend({}, this.private()), this.globals.isMobile = this.checkMobile(), this.applyConfig(), this.fetchInputs(), (!1 === this.config.startEmpty || this.globals.firstValueSelected) && (this.globals.currentDate = moment(this.config.startDate)), this.drawUserInterface(), this.addInitialEvents(), this.addKeyboardEvents(), this.$elem.data("calentim", this), this.config.oninit(this), this.globals.initComplete = !0, this.globals.lastScrollX = o.scrollX || o.pageXOffset || r.documentElement.scrollLeft, this.globals.lastScrollY = o.scrollY || o.pageYOffset || r.documentElement.scrollTop, u(o).trigger("resize.calentim"), this
        },
        validateDates: function () {
            if (null !== this.config.startDate && null !== this.config.endDate) {
                var t = moment(this.config.startDate, this.config.format).locale(this.config.locale),
                    e = moment(this.config.endDate, this.config.format).locale(this.config.locale),
                    i = moment().locale(this.config.locale);
                !1 === this.config.singleDate ? t.isValid() && e.isValid() ? t.isBefore(e) ? (this.config.startDate = t.clone(), this.config.endDate = e.clone()) : (this.config.startDate = e.clone(), this.config.endDate = t.clone()) : (this.config.startDate = i.clone(), this.config.endDate = i.clone()) : !1 === t.isValid() ? this.config.startDate = i.clone() : this.config.startDate = t.clone();
                var n = null,
                    a = null;
                null !== this.config.minDate && ((n = moment(this.config.minDate, this.config.format).locale(this.config.locale)).isValid() ? this.config.minDate = n.clone() : n = this.config.minDate = null), null !== this.config.maxDate && ((a = moment(this.config.maxDate, this.config.format).locale(this.config.locale)).isValid() ? n ? n.isBefore(a) ? this.config.maxDate = a.clone() : (this.config.minDate = a.clone(), this.config.maxDate = n.clone()) : this.config.maxDate = a.clone() : a = this.config.maxDate = null), n && t && n.isAfter(t, "day") && (this.config.startDate = n.clone()), n && e && n.isAfter(e, "day") && (this.config.endDate = n.clone()), a && t && a.isBefore(t, "day") && (this.config.startDate = a.clone()), null !== a && null !== e && a.isBefore(e, "day") && (this.config.endDate = a.clone()), (!1 === this.checkRangeContinuity() || this.isDisabled(t) || !1 === this.config.singleDate && this.isDisabled(e)) && (this.config.startEmpty = !0, this.globals.firstValueSelected = !1, this.clearInput())
            }
        },
        applyConfig: function () {
            null === this.config.target && (this.config.target = this.$elem), !1 === this.globals.isMobile ? (!0 === this.config.inline ? (this.container = this.$elem.wrapAll("<div class='calentim-container calentim-inline' tabindex='1'></div>").parent(), this.input = u("<div class='calentim-input'></div>").appendTo(this.container), this.elem.type = "hidden", this.config.showButtons = !1, this.setViewport()) : (this.container = u("<div class='calentim-container calentim-popup' style='display: none;'><div class='calentim-box-arrow-top'></div></div>").appendTo(this.config.container), this.input = u("<div class='calentim-input'></div>").appendTo(this.container), this.config.showButtons && (this.globals.delayInputUpdate = !0, this.config.autoCloseOnSelect = !1)), "horizontal" === this.config.rangeOrientation ? this.input.css("width", this.config.calendarCount * this.config.oneCalendarWidth + "px") : this.input.css("width", this.config.calendarCount * this.config.oneCalendarWidth + this.config.verticalRangeWidth + "px")) : (!0 === this.config.inline ? (this.container = this.$elem.wrapAll("<div class='calentim-container-mobile calentim-inline' tabindex='1'></div>").parent(), this.input = u("<div class='calentim-input'></div>").appendTo(this.container), this.elem.type = "hidden", this.config.showButtons = !1) : (this.container = u("<div class='calentim-container-mobile'></div>").appendTo(this.config.container), this.input = u("<div class='calentim-input' style='display: none;'></div>").appendTo(this.container), this.config.showButtons && (this.config.autoCloseOnSelect = !1), this.config.autoCloseOnSelect || (this.globals.delayInputUpdate = !0)), this.$elem.on("focus", function () {
                u(this).blur()
            })), this.clearRangeSelection()
        },
        clearRangeSelection: function () {
            for (var t = 0; t < this.config.ranges.length; t++) this.config.ranges[t].selected = !1;
            this.container.find(".calentim-range").each(function () {
                u(this).removeClass("calentim-range-selected")
            })
        },
        fetchInputs: function () {
            var t = null;
            if (t = -1 !== u.inArray(this.config.target.get(0).tagName, this.globals.valElements) ? this.config.target.val() : this.config.target.text(), !1 === this.config.singleDate && 0 < t.indexOf(this.config.dateSeparator) && "" !== t) {
                var e = t.split(this.config.dateSeparator);
                2 == e.length && moment(e[0], this.config.format, this.config.locale).isValid() && moment(e[1], this.config.format, this.config.locale).isValid() && (this.config.startDate = moment(e[0], this.config.format, this.config.locale), this.config.endDate = moment(e[1], this.config.format, this.config.locale), this.globals.firstValueSelected = !0)
            } else if (!0 === this.config.singleDate) {
                var i = t;
                "" !== i && moment(i, this.config.format, this.config.locale).isValid() && (this.config.startDate = moment(i, this.config.format, this.config.locale), this.config.endDate = moment(i, this.config.format, this.config.locale), this.globals.firstValueSelected = !0)
            }
            this.config.startEmpty && !this.globals.firstValueSelected && this.clearInput(), this.validateDates(), this.updateTimePickerDisplay()
        },
        drawUserInterface: function () {
            if (this.drawHeader(), this.calendars = this.input.find(".calentim-calendars").first(), !0 === this.config.showCalendars) {
                for (var t = this.globals.currentDate.clone().middleOfDay(), e = 0; e < this.config.calendarCount; e++) this.drawCalendarOfMonth(t), t = t.month(t.month() + 1);
                this.calendars.find(".calentim-calendar").last().addClass("no-border-right"), this.drawArrows()
            } else this.calendars.hide(), this.container.addClass("calentim-hidden-calendar");
            if (this.drawTimePickers(), this.drawFooter(), this.reDrawCells(), !1 === this.config.inline && this.globals.initComplete && this.setViewport(), !1 === this.globals.startSelected)
                if (this.globals.initComplete) this.updateInput(!1, !1);
                else {
                    var i = this.globals.delayInputUpdate;
                    this.globals.delayInputUpdate = !1, this.updateInput(!1, !1), this.globals.delayInputUpdate = i
                }
        },
        drawHeader: function () {
            var t = "<div class='calentim-header'><div class='calentim-header-start'><div class='calentim-header-start-day'></div><div class='calentim-header-start-date'></div><div class='calentim-header-start-weekday'></div></div>";
            !1 === this.config.singleDate && (t += "<div class='calentim-header-separator'><i class='fa fa-chevron-right'></i></div><div class='calentim-header-end'><div class='calentim-header-end-day'></div><div class='calentim-header-end-date'></div><div class='calentim-header-end-weekday'></div></div>"), t += "</div><div class='calentim-calendars'></div>", this.input.append(t), !1 !== this.config.showHeader && !1 !== this.config.showCalendars || this.input.find(".calentim-header").hide(), this.globals.headerStartDay = this.input.find(".calentim-header-start-day"), this.globals.headerStartDate = this.input.find(".calentim-header-start-date"), this.globals.headerStartWeekday = this.input.find(".calentim-header-start-weekday"), this.globals.headerEndDay = this.input.find(".calentim-header-end-day"), this.globals.headerEndDate = this.input.find(".calentim-header-end-date"), this.globals.headerEndWeekday = this.input.find(".calentim-header-end-weekday"), this.updateHeader()
        },
        updateHeader: function () {
            null !== this.config.startDate ? (this.config.startDate.locale(this.config.locale), this.globals.headerStartDay.text(this.config.startDate.date()), this.globals.isMobile ? this.globals.headerStartDate.text(this.config.startDate.format("MMM") + " " + this.config.startDate.year()) : this.globals.headerStartDate.text(this.config.startDate.format("MMMM") + " " + this.config.startDate.year()), this.globals.headerStartWeekday.text(this.config.startDate.format("dddd"))) : (this.globals.headerStartDay.text(""), this.globals.headerStartDate.text(""), this.globals.headerStartWeekday.text("")), !1 === this.config.singleDate && (null !== this.config.endDate ? (this.config.endDate.locale(this.config.locale), this.globals.headerEndDay.text(this.config.endDate.date()), this.globals.isMobile ? this.globals.headerEndDate.text(this.config.endDate.format("MMM") + " " + this.config.endDate.year()) : this.globals.headerEndDate.text(this.config.endDate.format("MMMM") + " " + this.config.endDate.year()), this.globals.headerEndWeekday.text(this.config.endDate.format("dddd"))) : (this.globals.headerEndDay.text(""), this.globals.headerEndDate.text(""), this.globals.headerEndWeekday.text("")))
        },
        isUpdateable: function () {
            var t = this.globals.delayInputUpdate,
                e = this.config.startEmpty && !this.globals.firstValueSelected;
            return (e = (e = e || !0 === this.config.singleDate && null === this.config.startDate) || !1 === this.config.singleDate && (null === this.config.startDate || null === this.config.endDate)) && this.clearInput(), !e && !t
        },
        updateInput: function (t, e) {
            this.isUpdateable() && (this.readTimeFromDisplay(!1), this.config.startDate && this.config.startDate.locale(this.config.locale), this.config.endDate && this.config.endDate.locale(this.config.locale), -1 !== u.inArray(this.config.target.get(0).tagName, this.globals.valElements) ? !1 === this.config.singleDate ? this.config.target.val(this.config.startDate.format(this.config.format) + this.config.dateSeparator + this.config.endDate.format(this.config.format)) : this.config.target.val(this.config.startDate.format(this.config.format)) : !1 === this.config.singleDate ? this.config.target.text(this.config.startDate.format(this.config.format) + this.config.dateSeparator + this.config.endDate.format(this.config.format)) : this.config.target.text(this.config.startDate.format(this.config.format)), this.globals.initComplete && (e || t) && this.config.onafterselect(this, this.config.startDate.clone(), this.config.endDate.clone()), e && this.config.ontimechange(this, this.config.startDate.clone(), this.config.endDate.clone()))
        },
        clearInput: function () {
            if (-1 !== u.inArray(this.config.target.get(0).tagName, this.globals.valElements) ? (this.config.singleDate, this.config.target.val("")) : (this.config.singleDate, this.config.target.text("")), this.config.startDate = this.config.endDate = this.globals.startDateInitial = this.globals.endDateInitial = null, this.config.startEmpty && (this.globals.firstValueSelected = !1), this.globals.initComplete) {
                this.updateHeader();
                var t = void 0 === this.footer ? [] : this.footer.find(".calentim-apply");
                0 < t.length && t.attr("disabled", "disabled")
            }
        },
        drawArrows: function () {
            0 < this.container.find(".calentim-title").length && (this.globals.isMobile ? (this.container.find(".calentim-title").prepend("<div class='calentim-prev'><i class='fa fa-arrow-left'></i></div>"), this.container.find(".calentim-title").append("<div class='calentim-next'><i class='fa fa-arrow-right'></i></div>")) : (this.container.find(".calentim-title").first().prepend("<div class='calentim-prev'><i class='fa fa-arrow-left'></i></div>"), this.container.find(".calentim-title").last().append("<div class='calentim-next'><i class='fa fa-arrow-right'></i></div>")))
        },
        drawCalendarOfMonth: function (t) {
            var e = moment.localeData(this.config.locale).firstDayOfWeek();
            t.locale(this.config.locale);
            var i = moment(t).locale(this.config.locale).date(1).startOf("week").middleOfDay();
            1 == e && !1 === this.config.startOnMonday ? (i.subtract(1, "days"), e = 0) : 0 === e && !0 === this.config.startOnMonday && (i.add(1, "days"), e = 1), i.isAfter(moment(t).date(1)) && i.add(-7, "day");
            var n = "<div class='calentim-calendar" + (this.config.showWeekNumbers ? " calentim-calendar-weeknumbers" : "") + "' data-month='" + t.month() + "'>",
                a = 0,
                s = "",
                o = "";
            this.config.enableMonthSwitcher && (s = " class='calentim-month-switch'"), this.config.enableYearSwitcher && (o = " class='calentim-year-switch'"), n += "<div class='calentim-title'><span><b" + s + ">" + t.format("MMMM") + "</b>&nbsp;<span" + o + ">" + t.year() + "</span></span></div>", n += "<div class='calentim-days-container'>", this.config.showWeekNumbers && (n += "<div class='calentim-dayofweek'>&nbsp;</div>");
            for (var r = e; r < e + 7; r++) n += "<div class='calentim-dayofweek'>" + moment().day(r % 7).locale(this.config.locale).format("ddd") + "</div>";
            for (; a < 42;) {
                var l = i.middleOfDay().unix(),
                    c = t.month() == i.month() ? "calentim-day" : "calentim-disabled";
                a % 7 == 0 && this.config.showWeekNumbers && (n += "<div class='calentim-weeknumber'><span>" + i.format("ww") + "</span></div>"), n += "<div class='" + c + "' data-value='" + l + "'><span>" + i.date() + "</span></div>", i.add(moment.duration({
                    days: 1
                })), a++
            }
            n += "</div>", n += "</div>", this.calendars.append(n)
        },
        drawTimePickers: function () {
            this.input.find(".calentim-timepickers").remove(), this.input.append("<div class='calentim-timepickers'></div>"), this.timepickers = this.input.find(".calentim-timepickers"), this.config.showTimePickers || this.timepickers.hide();
            var t = this.config.minHour, //0,
                e = this.config.maxHour, //23,
                i = !1;
            12 == this.config.hourFormat && (t = 1, e = 12, i = !0);
            var n = u("<div class='calentim-timepicker calentim-timepicker-start'></div>").appendTo(this.timepickers);
            this.addTimePickerHours(n, t, e), this.addTimePickerHourMinuteSeparator(n), this.addTimePickerMinutes(n, this.config.minuteSteps), i && this.addTimePickerAMPM(n), !1 === this.config.singleDate && (n = u("<div class='calentim-timepicker calentim-timepicker-end'></div>").appendTo(this.timepickers), this.addTimePickerHours(n, t, e), this.addTimePickerHourMinuteSeparator(n), this.addTimePickerMinutes(n, this.config.minuteSteps), i && this.addTimePickerAMPM(n)), this.addTimePickerEvents(), this.updateTimePickerDisplay()
        },
        addTimePickerHours: function (t, e, i) {
            var n = u("<div class='calentim-timepicker-hours-wrapper'></div>").appendTo(t),
                a = u("<div class='calentim-timepicker-hours'></div>").appendTo(n),
                s = "<div class='calentim-hour-selected-prev'>&nbsp;</div>";
                //s += "<div class='calentim-hour-selected'>" + ("00" + e).slice(-2) + "</div>", s += "<div class='calentim-hour-selected-next'>" + ("00" + (e + 1)).slice(-2) + "</div>", a.append(s).data({
            s += "<div class='calentim-hour-selected'>" + 12 + "</div>", s += "<div class='calentim-hour-selected-next'>" + 12 + "</div>", a.append(s).data({
                value: e,
                min: e,
                max: i,
                step: 1
            }), u("<div class='calentim-timepicker-hour-arrows'><div class='calentim-timepicker-hours-up " + (this.config.reverseTimepickerArrows ? "calentim-direction-down" : "calentim-direction-up") + "'><i class='fa fa-arrow-up'></i></div><div class='calentim-timepicker-hours-down " + (this.config.reverseTimepickerArrows ? "calentim-direction-up" : "calentim-direction-down") + "'><i class='fa fa-arrow-down'></i></div></div>").appendTo(t)
        },
        addTimePickerMinutes: function (t, e) {
            var i = u("<div class='calentim-timepicker-minutes-wrapper'></div>").appendTo(t);
            u("<div class='calentim-timepicker-minutes'></div>").appendTo(i).append("<div class='calentim-minute-selected-prev'>&nbsp;</div><div class='calentim-minute-selected'>00</div><div class='calentim-minute-selected-next'>01</divided>").data({
                value: 0,
                min: 0,
                max: 59 % e != 0 ? 59 - 59 % e : 59,
                step: e
            }), u("<div class='calentim-timepicker-minute-arrows'><div class='calentim-timepicker-minutes-up " + (this.config.reverseTimepickerArrows ? "calentim-direction-down" : "calentim-direction-up") + "'><i class='fa fa-arrow-up'></i></div><div class='calentim-timepicker-minutes-down " + (this.config.reverseTimepickerArrows ? "calentim-direction-up" : "calentim-direction-down") + "'><i class='fa fa-arrow-down'></i></div></div>").appendTo(t)
        },
        addTimePickerHourMinuteSeparator: function (t) {
            u("<div class='calentim-hour-minute-seperator'>:</div>").appendTo(t)
        },
        addTimePickerAMPM: function (t) {
            var e = u("<div class='calentim-timepicker-ampm'></div>").appendTo(t);
            e.append("<div class='calentim-timepicker-ampm-am'>AM</div>"), e.append("<div class='calentim-timepicker-ampm-pm'>PM</div>")
        },
        addTimePickerEvents: function () {
            var l = this,
                i = function (t) {
                    var e = t.parents(".calentim-timepicker").attr("class"),
                        i = t.attr("class"),
                        n = 0 <= e.indexOf("calentim-timepicker-start") ? "start" : "end",
                        a = 0 < i.indexOf("timepicker-minutes") ? "minute" : "hour",
                        s = 0 <= i.indexOf("calentim-direction-up") ? "up" : "down",
                        o = t.parents(".calentim-timepickers").find(".calentim-timepicker-" + n + " .calentim-timepicker-" + a + "s"),
                        r = o.data();
                    if (r && r.hasOwnProperty("value")) {
                        switch (s) {
                            case "down":
                                r.value + r.step > r.max ? r.value = r.min : r.value += r.step;
                                break;
                            case "up":
                                r.value - r.step < r.min ? r.value = r.max : r.value -= r.step
                        }
                        o.data(r), o.find(".calentim-" + a + "-selected").text(("00" + r.value).slice(-2)), !1 === l.config.reverseTimepickerArrows ? (o.find(".calentim-" + a + "-selected-prev").text(r.value - r.step < r.min ? ("00" + r.max).slice(-2) : ("00" + (r.value - r.step)).slice(-2)), o.find(".calentim-" + a + "-selected-next").text(r.value + r.step > r.max ? ("00" + r.min).slice(-2) : ("00" + (r.value + r.step)).slice(-2))) : (o.find(".calentim-" + a + "-selected-prev").text(r.value + r.step > r.max ? ("00" + r.min).slice(-2) : ("00" + (r.value + r.step)).slice(-2)), o.find(".calentim-" + a + "-selected-next").text(r.value - r.step < r.min ? ("00" + r.max).slice(-2) : ("00" + (r.value - r.step)).slice(-2))), l.input.is(":visible") && (l.updateInput(!1, !0), l.config.ondraw(l))
                    }
                };
            u(r).off("mousedown.calentim").on("mousedown.calentim", ".calentim-timepicker-minutes-up, .calentim-timepicker-minutes-down, .calentim-timepicker-hours-up, .calentim-timepicker-hours-down", function (t) {
                var e = this;
                l.globals.mouseTimer && clearInterval(l.globals.mouseTimer), i(u(e)), l.globals.mouseTimer = setInterval(function () {
                    i(u(e))
                }, 200)
            }).off("mouseup.calentim").on("mouseup.calentim", function (t) {
                l.globals.mouseTimer && clearInterval(l.globals.mouseTimer), l.globals.preventMouseClick = !0
            }).off("click.calentim").on("click.calentim", ".calentim-timepicker-minutes-up, .calentim-timepicker-minutes-down, .calentim-timepicker-hours-up, .calentim-timepicker-hours-down", function (t) {
                l.globals.preventMouseClick || i(u(this)), l.globals.preventMouseClick = !1
            }), this.timepickers.find(".calentim-timepicker-hours-wrapper, .calentim-timepicker-minutes-wrapper").off("mousewheel.calentim DOMMouseScroll.calentim").on("mousewheel.calentim DOMMouseScroll.calentim", function (t) {
                0 < (t.originalEvent.wheelDelta || -t.originalEvent.detail) / 120 ? u(t.currentTarget).hasClass("calentim-timepicker-hours-wrapper") ? i(u(this).siblings(".calentim-timepicker-hour-arrows").find(".calentim-timepicker-hours-up")) : u(t.currentTarget).hasClass("calentim-timepicker-minutes-wrapper") && i(u(this).siblings(".calentim-timepicker-minute-arrows").find(".calentim-timepicker-minutes-up")) : u(t.currentTarget).hasClass("calentim-timepicker-hours-wrapper") ? i(u(this).siblings(".calentim-timepicker-hour-arrows").find(".calentim-timepicker-hours-down")) : u(t.currentTarget).hasClass("calentim-timepicker-minutes-wrapper") && i(u(this).siblings(".calentim-timepicker-minute-arrows").find(".calentim-timepicker-minutes-down")), l.stopBubbling(t)
            }), this.globals.isMobile && this.timepickers.find(".calentim-timepicker-minutes, .calentim-timepicker-hours").each(function () {
                var t = new Hammer(this);
                t.get("pan").set({
                    direction: Hammer.DIRECTION_VERTICAL
                }), t.on("panmove", l.panThrottle(function (t) {
                    var e = u(t.target);
                    return 0 < t.velocityY ? e.hasClass("calentim-timepicker-hours-wrapper") || 0 < e.parents(".calentim-timepicker-hours-wrapper").length ? (i(e.parents(".calentim-timepicker").find(".calentim-timepicker-hours-up")), l.stopBubbling(t.srcEvent)) : (e.hasClass("calentim-timepicker-minutes-wrapper") || 0 < e.parents(".calentim-timepicker-minutes-wrapper").length) && (i(e.parents(".calentim-timepicker").find(".calentim-timepicker-minutes-up")), l.stopBubbling(t.srcEvent)) : e.hasClass("calentim-timepicker-hours-wrapper") || 0 < e.parents(".calentim-timepicker-hours-wrapper").length ? (i(e.parents(".calentim-timepicker").find(".calentim-timepicker-hours-down")), l.stopBubbling(t.srcEvent)) : (e.hasClass("calentim-timepicker-minutes-wrapper") || 0 < e.parents(".calentim-timepicker-minutes-wrapper").length) && (i(e.parents(".calentim-timepicker").find(".calentim-timepicker-minutes-down")), l.stopBubbling(t.srcEvent)), !1
                }))
            }), this.timepickers.find(".calentim-timepicker-ampm > div").off("click.calentim").on("click.calentim", function () {
                if (u(this).hasClass("calentim-ampm-selected")) return !1;
                u(this).addClass("calentim-ampm-selected").siblings().removeClass("calentim-ampm-selected"), l.updateInput(!1, !0), l.config.ondraw(l)
            })
        },
        panThrottle: function (i) {
            return u.proxy(function () {
                var t = Array.prototype.slice.call(arguments),
                    e = Math.ceil(Math.abs(t[0].deltaY) / 20) || 1;
                this.globals.panScrollPos != e && (i.apply(this, t), this.globals.panScrollPos = e)
            }, this)
        },
        readTimeFromDisplay: function (t) {
            var e = null,
                i = null,
                n = "",
                a = "";
            12 == this.config.hourFormat ? (n = this.timepickers.find(".calentim-timepicker-start .calentim-hour-selected").text() + " " + this.timepickers.find(".calentim-timepicker-start .calentim-minute-selected").text() + " " + this.timepickers.find(".calentim-timepicker-start .calentim-ampm-selected").text(), e = moment(n, "hh mm a"), !1 === this.config.singleDate && (a = this.timepickers.find(".calentim-timepicker-end .calentim-hour-selected").text() + " " + this.timepickers.find(".calentim-timepicker-end .calentim-minute-selected").text() + " " + this.timepickers.find(".calentim-timepicker-end .calentim-ampm-selected").text(), i = moment(a, "hh mm a"))) : (n = this.timepickers.find(".calentim-timepicker-start .calentim-hour-selected").text() + " " + this.timepickers.find(".calentim-timepicker-start .calentim-minute-selected").text(), e = moment(n, "HH mm"), !1 === this.config.singleDate && (a = this.timepickers.find(".calentim-timepicker-end .calentim-hour-selected").text() + " " + this.timepickers.find(".calentim-timepicker-end .calentim-minute-selected").text(), i = moment(a, "HH mm"))), e.isValid() && null !== this.config.startDate && this.config.startDate.hours(e.hours()).minutes(e.minutes()).locale(this.config.locale), !1 === this.config.singleDate && i.isValid() && null !== this.config.endDate && this.config.endDate.hours(i.hours()).minutes(i.minutes()).locale(this.config.locale), t && (e && (this.globals.startTimeBackup = e.clone()), i && !1 === this.config.singleDate && (this.globals.endTimeBackup = i.clone()))
        },
        backupTimePickers: function () {
            this.readTimeFromDisplay(!0)
        },
        restoreTimePickers: function () {
            12 == this.config.hourFormat ? (this.globals.startTimeBackup && this.setStartTimeValue(parseInt(this.globals.startTimeBackup.format("hh"), 10), parseInt(this.globals.startTimeBackup.format("mm"), 10), this.globals.startTimeBackup.format("a")), !this.config.singleDate && this.globals.endTimeBackup && this.setEndTimeValue(parseInt(this.globals.endTimeBackup.format("hh"), 10), parseInt(this.globals.endTimeBackup.format("mm"), 10), this.globals.endTimeBackup.format("a"))) : (this.globals.startTimeBackup && this.setStartTimeValue(parseInt(this.globals.startTimeBackup.format("HH"), 10), parseInt(this.globals.startTimeBackup.format("mm"), 10), null), !this.config.singleDate && this.globals.endTimeBackup && this.setEndTimeValue(parseInt(this.globals.endTimeBackup.format("HH"), 10), parseInt(this.globals.endTimeBackup.format("mm"), 10), null))
        },
        updateTimePickerDisplay: function () {
            if (void 0 !== this.timepickers && null !== this.config.startDate && null !== this.config.endDate) {
                var t = moment(this.config.startDate).set({
                    minute: 1 != this.config.minuteSteps ? Math.round(this.config.startDate.minutes() / this.config.minuteSteps) * this.config.minuteSteps : this.config.startDate.minutes()
                }),
                    e = moment(this.config.endDate).set({
                        minute: 1 != this.config.minuteSteps ? Math.round(this.config.endDate.minutes() / this.config.minuteSteps) * this.config.minuteSteps : this.config.endDate.minutes()
                    }),
                    i = t.hours(),
                    n = e.hours(),
                    a = t.minutes(),
                    s = e.minutes(),
                    o = null,
                    r = null;
                if (12 == this.config.hourFormat) {
                    var l = t.format("hh mm a").split(" ");
                    i = parseInt(l[0], 10), o = l[2].toLowerCase();
                    var c = e.format("hh mm a").split(" ");
                    n = parseInt(c[0], 10), r = c[2].toLowerCase()
                }
                this.setStartTimeValue(i, a, o), this.setEndTimeValue(n, s, r)
            }
        },
        setStartTimeValue: function (t, e, i) {
            var n = this.timepickers.find(".calentim-timepicker-start"),
                a = n.find(".calentim-timepicker-hours");
            a.data("value", t);
            var s = a.data();
            s && s.hasOwnProperty("value") && (a.find(".calentim-hour-selected").text(("00" + s.value).slice(-2)), a.find(this.config.reverseTimepickerArrows ? ".calentim-hour-selected-next" : ".calentim-hour-selected-prev").text(s.value - s.step < s.min ? ("00" + s.max).slice(-2) : ("00" + (s.value - s.step)).slice(-2)), a.find(this.config.reverseTimepickerArrows ? ".calentim-hour-selected-prev" : ".calentim-hour-selected-next").text(s.value + s.step > s.max ? ("00" + s.min).slice(-2) : ("00" + (s.value + s.step)).slice(-2)));
            var o = n.find(".calentim-timepicker-minutes");
            o.data("value", e), (s = o.data()) && s.hasOwnProperty("value") && (o.find(".calentim-minute-selected").text(("00" + s.value).slice(-2)), o.find(this.config.reverseTimepickerArrows ? ".calentim-minute-selected-next" : ".calentim-minute-selected-prev").text(s.value - s.step < s.min ? ("00" + s.max).slice(-2) : ("00" + (s.value - s.step)).slice(-2)), o.find(this.config.reverseTimepickerArrows ? ".calentim-minute-selected-prev" : ".calentim-minute-selected-next").text(s.value + s.step > s.max ? ("00" + s.min).slice(-2) : ("00" + (s.value + s.step)).slice(-2))), null !== i && (n.find(".calentim-ampm-selected").removeClass("calentim-ampm-selected"), n.find(".calentim-timepicker-ampm-" + i).addClass("calentim-ampm-selected"))
        },
        setEndTimeValue: function (t, e, i) {
            var n = this.timepickers.find(".calentim-timepicker-end"),
                a = n.find(".calentim-timepicker-hours");
            a.data("value", t);
            var s = a.data();
            s && s.hasOwnProperty("value") && (a.find(".calentim-hour-selected").text(("00" + s.value).slice(-2)), a.find(this.config.reverseTimepickerArrows ? ".calentim-hour-selected-next" : ".calentim-hour-selected-prev").text(s.value - s.step < s.min ? ("00" + s.max).slice(-2) : ("00" + (s.value - s.step)).slice(-2)), a.find(this.config.reverseTimepickerArrows ? ".calentim-hour-selected-prev" : ".calentim-hour-selected-next").text(s.value + s.step > s.max ? ("00" + s.min).slice(-2) : ("00" + (s.value + s.step)).slice(-2)));
            var o = n.find(".calentim-timepicker-minutes");
            o.data("value", e), (s = o.data()) && s.hasOwnProperty("value") && (o.find(".calentim-minute-selected").text(("00" + s.value).slice(-2)), o.find(this.config.reverseTimepickerArrows ? ".calentim-minute-selected-next" : ".calentim-minute-selected-prev").text(s.value - s.step < s.min ? ("00" + s.max).slice(-2) : ("00" + (s.value - s.step)).slice(-2)), o.find(this.config.reverseTimepickerArrows ? ".calentim-minute-selected-prev" : ".calentim-minute-selected-next").text(s.value + s.step > s.max ? ("00" + s.min).slice(-2) : ("00" + (s.value + s.step)).slice(-2))), null !== i && (n.find(".calentim-ampm-selected").removeClass("calentim-ampm-selected"), n.find(".calentim-timepicker-ampm-" + i).addClass("calentim-ampm-selected"))
        },
        drawFooter: function () {
            if (!1 === this.config.singleDate && !0 === this.config.showFooter && !0 === this.config.showCalendars) {
                "horizontal" === this.config.rangeOrientation || this.globals.isMobile ? this.input.append("<div class='calentim-ranges'></div>") : (this.input.addClass("calentim-input-vertical-range"), this.input.wrapInner("<div class='calentim-left'></div>"), u("<div class='calentim-right' style='max-width: " + this.config.verticalRangeWidth + "px; min-width: " + this.config.verticalRangeWidth + "px'><div class='calentim-ranges'></div></div>").insertAfter(this.input.find(".calentim-left")));
                var t = this.input.find(".calentim-ranges");
                for (var e in t.append("<span class='calentim-range-header-container'><i class='fa fa-retweet'></i><div class='calentim-range-header'>" + this.config.rangeLabel + "</div></span>"), this.config.ranges) t.append("<div class='calentim-range" + (this.config.ranges[e].selected ? " calentim-range-selected" : "") + "' data-id='" + e + "'>" + this.config.ranges[e].title + "</div>")
            }
            if (this.globals.isMobile && (!0 !== this.config.singleDate && !1 !== this.config.showFooter || this.input.append("<div class='calentim-filler'></div>")), (this.globals.isMobile && !this.config.inline || !this.globals.isMobile && !this.config.inline && this.config.showButtons) && ("horizontal" === this.config.rangeOrientation || this.globals.isMobile ? this.input.append("<div class='calentim-footer'></div>") : this.input.find(".calentim-right").append("<div class='calentim-footer'></div>"), this.footer = this.input.find(".calentim-footer"), this.footer.append("<button type='button' class='calentim-cancel'>" + this.config.cancelLabel + "</button>"), this.footer.append("<button type='button' class='calentim-apply'>" + this.config.applyLabel + "</button>"), !1 === this.globals.firstValueSelected && !0 === this.config.startEmpty && void 0 !== this.footer || this.globals.isMobile && 0 == this.globals.endSelected)) {
                var i = void 0 === this.footer ? [] : this.footer.find(".calentim-apply");
                0 < i.length && i.attr("disabled", "disabled")
            }
        },
        drawNextMonth: function (t) {
            if ((t = t || o.event).target = t.target || t.srcElement, null === this.globals.swipeTimeout) {
                var e = this;
                this.globals.swipeTimeout = setTimeout(function () {
                    if (!0 === e.config.onbeforemonthchange(e, e.globals.currentDate.clone().startOfMonth(), "next")) {
                        var t = e.calendars.get(0).scrollTop;
                        e.globals.currentDate.middleOfDay().add(1, "month"), e.reDrawCalendars(), e.calendars.get(0).scrollTop = t, e.config.onaftermonthchange(e, e.globals.currentDate.clone().startOfMonth())
                    }
                    e.globals.swipeTimeout = null
                }, 100)
            }
            this.stopBubbling(t)
        },
        drawPrevMonth: function (t) {
            if ((t = t || o.event).target = t.target || t.srcElement, null === this.globals.swipeTimeout) {
                var e = this;
                this.globals.swipeTimeout = setTimeout(function () {
                    if (!0 === e.config.onbeforemonthchange(e, e.globals.currentDate.clone().startOfMonth(), "prev")) {
                        var t = e.calendars.get(0).scrollTop;
                        e.globals.currentDate.middleOfDay().subtract(1, "month"), e.reDrawCalendars(), e.calendars.get(0).scrollTop = t, e.config.onaftermonthchange(e, e.globals.currentDate.clone().startOfMonth())
                    }
                    e.globals.swipeTimeout = null
                }, 100)
            }
            this.stopBubbling(t)
        },
        cellClicked: function (t) {
            (t = t || o.event).target = t.target || t.srcElement, !1 === u(t.target).hasClass("calentim-day") && (t.target = u(t.target).closest(".calentim-day").get(0));
            var e = u(t.target).data("value"),
                i = moment.unix(e).middleOfDay();
            if (!1 === this.config.singleDate)
                if (!1 === this.globals.startSelected) {
                    null !== this.config.startDate && (this.globals.startDateBackup = this.config.startDate.clone()), this.config.startDate = i, this.config.endDate = null, this.globals.startSelected = !0, this.globals.endSelected = !1, this.readTimeFromDisplay(!1);
                    var n = void 0 === this.footer ? [] : this.footer.find(".calentim-apply");
                    0 < n.length && n.attr("disabled", "disabled"), this.config.onfirstselect(this, this.config.startDate.clone())
                } else {
                    if (i.isBefore(this.config.startDate)) {
                        var a = this.config.startDate.clone();
                        this.config.startDate = i.clone(), i = a
                    }
                    this.globals.startDateBackup = null, this.config.endDate = i, this.globals.endSelected = !0, this.globals.startSelected = !1, this.globals.hoverDate = null, this.readTimeFromDisplay(!1), !0 === this.config.onbeforeselect(this, this.config.startDate.clone(), this.config.endDate.clone()) && !0 === this.checkRangeContinuity() ? (this.globals.firstValueSelected = !0, this.clearRangeSelection(), this.updateInput(!0, !1)) : this.fetchInputs(), this.config.autoCloseOnSelect && !1 === this.config.inline ? this.hideDropdown(t) : void 0 !== this.footer && null !== this.config.endDate && this.footer.find(".calentim-apply").removeAttr("disabled")
                } else this.config.startDate = i, this.config.endDate = i, this.globals.endSelected = !0, this.globals.startSelected = !1, !(this.globals.hoverDate = null) === this.config.onbeforeselect(this, this.config.startDate.clone(), this.config.endDate.clone()) ? (this.globals.firstValueSelected = !0, this.clearRangeSelection(), this.updateInput(!0, !1)) : this.fetchInputs(), this.config.autoCloseOnSelect && !1 === this.config.inline ? this.hideDropdown(t) : void 0 !== this.footer && null !== this.config.endDate && this.footer.find(".calentim-apply").removeAttr("disabled");
            return this.input.is(":visible") && (this.reDrawCells(), this.updateHeader()), this.stopBubbling(t), !1
        },
        checkRangeContinuity: function () {
            if (!1 === this.config.continuous || null === this.config.startDate || null === this.config.endDate) return !0;
            for (var t = this, e = this.config.endDate.diff(this.config.startDate, "days"), i = moment(this.config.startDate), n = function (e) {
                return u.grep(t.config.disabledRanges, function (t) {
                    return e.isBetween(t.start, t.end, "day", "[]")
                })
            }, a = 0; a <= e; a++) {
                if (0 < n(i).length || !0 === this.config.disableDays(i)) return !1;
                i.middleOfDay().add(1, "days")
            }
            return !0
        },
        isDisabled: function (t) {
            var e = moment(t);
            if (!0 === this.config.disableDays(e.clone().middleOfDay())) return !0;
            for (var i = 0; i < this.config.disabledRanges.length; i++) {
                var n = this.config.disabledRanges[i];
                if (e.isBetween(n.start, n.end, "day", "[]")) return !0
            }
            return !1
        },
        cellHovered: function (t) {
            (t = t || o.event).target = t.target || t.srcElement, !1 === u(t.target).hasClass("calentim-day") && (t.target = u(t.target).closest(".calentim-day").get(0));
            var e = u(t.target).data("value");
            this.globals.hoverDate = moment.unix(e).middleOfDay(), !(this.globals.keyboardHoverDate = null) === this.globals.startSelected && this.reDrawCells(), this.stopBubbling(t)
        },
        reDrawCalendars: function () {
            this.backupTimePickers(), this.input.empty(), this.drawUserInterface(), this.restoreTimePickers(), this.container.focus(), 0 !== this.globals.lastScrollY && o.scrollTo(this.globals.lastScrollX, this.globals.lastScrollY)
        },
        monthSwitchClicked: function () {
            if (!(0 < this.calendars.find(".calentim-month-selector").length)) {
                var e = this;
                this.calendars.get(0).scrollTop = 0;
                for (var t = u("<div class='calentim-month-selector'></div>").appendTo(this.calendars), i = this.globals.currentDate.get("month"), n = 0; n < 12; n++) t.append("<div class='calentim-ms-month" + (i == n ? " current" : "") + "' data-month='" + n + "'>" + (this.config.numericMonthSelector ? n + 1 : moment({
                    day: 15,
                    hour: 12,
                    month: n
                }).locale(this.config.locale).format(this.config.monthSwitcherFormat)) + "</div>");
                t.css("display", "block"), this.optimizeFontSize(t.find(".calentim-ms-month")), t.find(".calentim-ms-month").off("click").on("click", function (t) {
                    e.globals.currentDate.month(u(this).data("month")), e.config.onaftermonthchange(e, e.globals.currentDate.clone().startOfMonth()), e.calendars.find(".calentim-month-selector").remove(), e.reDrawCalendars(), e.stopBubbling(t)
                })
            }
        },
        yearSwitchClicked: function () {
            if (!(0 < this.calendars.find(".calentim-year-selector").length)) {
                var a = this;
                this.calendars.get(0).scrollTop = 0;
                var s = u("<div class='calentim-year-selector'></div>").appendTo(this.calendars),
                    t = this.globals.currentDate.get("year");
                s.append("<div class='calentim-ys-year-prev'><i class='fa fa-angle-double-left'></i></div>"), s.data("year", t);
                for (var e = t - 6; e < t + 7; e++) s.append("<div class='calentim-ys-year" + (t == e ? " current" : "") + "' data-year='" + e + "'>" + e + "</div>");
                s.append("<div class='calentim-ys-year-next'><i class='fa fa-angle-double-right'></i></div>"), s.css("display", "block"), this.optimizeFontSize(s.find(".calentim-ys-year")), u(r).off("click.calentimys").on("click.calentimys", ".calentim-ys-year", function (t) {
                    a.globals.currentDate.year(u(this).data("year")), a.config.onafteryearchange(a, a.globals.currentDate.clone().startOf("year")), a.calendars.find(".calentim-year-selector").remove(), a.reDrawCalendars(), a.stopBubbling(t)
                }), u(r).off("click.calentimysprev").on("click.calentimysprev", ".calentim-ys-year-prev", function (t) {
                    var e = s.data("year") - 13,
                        i = a.globals.currentDate.get("year");
                    s.data("year", e), s.empty(), s.append("<div class='calentim-ys-year-prev'><i class='fa fa-angle-double-left'></i></div>");
                    for (var n = e - 6; n < e + 7; n++) s.append("<div class='calentim-ys-year" + (i == n ? " current" : "") + "' data-year='" + n + "'>" + n + "</div>");
                    s.append("<div class='calentim-ys-year-next'><i class='fa fa-angle-double-right'></i></div>"), a.stopBubbling(t)
                }), u(r).off("click.calentimysnext").on("click.calentimysnext", ".calentim-ys-year-next", function (t) {
                    var e = s.data("year") + 13,
                        i = a.globals.currentDate.get("year");
                    s.data("year", e), s.empty(), s.append("<div class='calentim-ys-year-prev'><i class='fa fa-angle-double-left'></i></div>");
                    for (var n = e - 6; n < e + 7; n++) s.append("<div class='calentim-ys-year" + (i == n ? " current" : "") + "' data-year='" + n + "'>" + n + "</div>");
                    s.append("<div class='calentim-ys-year-next'><i class='fa fa-angle-double-right'></i></div>"), a.stopBubbling(t)
                })
            }
        },
        optimizeFontSize: function (t) {
            t.each(function (t, e) {
                (e = u(e)).wrapInner("<span class='adjust-subject'></span>").prepend("<span class='font-adjuster'>i</span>");
                var i = e.find(".adjust-subject"),
                    n = e.find(".font-adjuster");
                if (i.innerHeight() === n.innerHeight()) n.remove(), i.contents().unwrap();
                else {
                    for (var a = 0; i.innerHeight() !== n.innerHeight() && a < 16;) {
                        var s = 0;
                        if (s = void 0 !== o.getComputedStyle ? parseFloat(o.getComputedStyle(n.get(0), null).getPropertyValue("font-size")) : parseFloat(n.css("font-size")), i.parent().css("font-size", s - 1 + "px"), n.css("font-size", s - 1 + "px"), s < 2) break;
                        a++
                    }
                    n.remove(), i.contents().unwrap()
                }
            })
        },
        showDropdown: function (t) {
            var e = t || o.event || jQuery.Event("click", {
                target: this.elem
            });
            return e.target = e.target || e.srcElement, (!this.globals.isMobile && "none" == this.container.css("display") || this.globals.isMobile && "none" == this.input.css("display")) && (e.target !== this.elem && (this.globals.dontHideOnce = !0, this.globals.initiator = e.target), null !== this.config.startDate && (this.globals.startDateInitial = this.config.startDate.clone()), null !== this.config.endDate && (this.globals.endDateInitial = this.config.endDate.clone()), this.fetchInputs(), (!1 === this.config.startEmpty || this.globals.firstValueSelected) && (this.globals.currentDate = moment(this.config.startDate)), this.config.onbeforeshow(this), this.globals.isMobile ? (this.input.css({
                display: "flex"
            }), u("body").addClass("calentim-open")) : this.container.css({
                display: "block"
            }), this.reDrawCalendars(), this.config.onaftershow(this)), !1
        },
        hideDropdown: function (t) {
            var e = t || o.event || jQuery.Event("click", {
                target: "body"
            });
            if (e.target = e.target || e.srcElement, this.globals.initiator !== e.target) return !1 === this.config.inline && (!this.globals.isMobile && "none" !== this.container.css("display") || this.globals.isMobile && "none" !== this.input.css("display")) && (this.config.onbeforehide(this), this.globals.isMobile ? (this.input.css({
                display: "none"
            }), u("body").removeClass("calentim-open")) : this.container.css({
                display: "none"
            }), (this.globals.hoverDate = null) !== this.globals.startDateBackup && (this.config.startDate = this.globals.startDateBackup, this.globals.startSelected = !1), this.config.onafterhide(this)), !1
        },
        reDrawCells: function () {
            var t = this.container.find(".calentim-day, .calentim-disabled"),
                e = null !== this.config.startDate ? this.config.startDate.clone().middleOfDay().unix() : null,
                i = null !== this.config.endDate ? this.config.endDate.clone().middleOfDay().unix() : null,
                n = null !== this.config.minDate ? this.config.minDate.clone().middleOfDay().unix() : null,
                a = null !== this.config.maxDate ? this.config.maxDate.clone().middleOfDay().unix() : null,
                s = null !== this.globals.hoverDate ? this.globals.hoverDate.clone().middleOfDay().unix() : null,
                o = null !== this.globals.keyboardHoverDate ? this.globals.keyboardHoverDate.clone().middleOfDay().unix() : null,
                r = moment().middleOfDay().unix();
            this.lastHoverStatus = !1;
            for (var l = 0; l < t.length; l++) {
                var c = u(t[l]),
                    h = parseInt(c.attr("data-value")),
                    d = moment.unix(h).middleOfDay().locale(this.config.locale),
                    f = "calentim-day",
                    m = d.day();
                6 != m && 0 !== m || (f += " calentim-weekend"), h === r && (f += " calentim-today"), f = this.addSelectedStyles(h, f, e, i, n, a), f = this.addHoverStyles(c, h, f, this, e, s, o), f = this.addDisabledStyles(c, d, h, f, n, a), c.attr("class", f)
            }
            this.attachEvents(), this.config.ondraw(this)
        },
        addSelectedStyles: function (t, e, i, n, a, s) {
            var o = this;
            return (!1 === o.config.startEmpty || o.globals.firstValueSelected) && (!1 === o.config.singleDate && null !== i && i === t && (e += " calentim-start"), !1 === o.config.singleDate && null !== n && n === t && (e += " calentim-end"), !1 === o.config.singleDate && null !== i && null !== n && t <= n && i <= t && (e += " calentim-selected"), !0 === o.config.singleDate && null !== i && i === t && (e += " calentim-selected calentim-start calentim-end")), e
        },
        addHoverStyles: function (t, e, i, n, a, s, o) {
            return i.replace("calentim-hovered", "").replace("calentim-hovered-last", "").replace("calentim-hovered-first", ""), !0 === this.globals.startSelected && !1 === this.globals.endSelected && null !== s && (s <= e && e <= a || e <= s && a <= e) && (i += " calentim-hovered"), !0 === this.config.enableKeyboard && null !== o && (!1 === this.globals.startSelected ? o == e && (i += " calentim-hovered") : (e <= a && o <= e || a <= e && e <= o) && (i += " calentim-hovered")), !1 === this.lastHoverStatus && 0 < i.indexOf("calentim-hovered") && (this.lastHoverStatus = !0, i += " calentim-hovered-first"), !0 === this.lastHoverStatus && i.indexOf("calentim-hovered") < 0 && (t.prev(".calentim-day").addClass("calentim-hovered-last"), this.lastHoverStatus = !1), i
        },
        addDisabledStyles: function (t, e, i, n, a, s) {
            var o, r = this;
            return (0 < r.config.disabledRanges.length && 0 < (o = e, u.grep(r.config.disabledRanges, function (t) {
                return o.isBetween(t.start, t.end, "day", "[]")
            })).length || !0 === r.config.disableDays(e) || null !== s && s < i || null !== a && i < a) && (n = "calentim-disabled calentim-disabled-range"), e.month() != t.closest(".calentim-calendar").data("month") && (n = n.replace("calentim-disabled", "").replace(/  /g, " "), n = (n += " calentim-disabled calentim-not-in-month").replace("calentim-weekend", "").replace(/  /g, " ")), n
        },
        rangeClicked: function (t) {
            if ((t = t || o.event).target = t.target || t.srcElement, !1 === u(t.target).hasClass("calentim-range") && (t.target = u(t.target).closest(".calentim-range").get(0)), t.target.hasAttribute("data-id")) {
                var e = u(t.target).attr("data-id");
                return this.globals.currentDate = this.config.ranges[e].startDate.startOf("day").clone().locale(this.config.locale).middleOfDay(), this.config.startDate = this.config.ranges[e].startDate.startOf("day").clone().locale(this.config.locale).middleOfDay(), this.config.endDate = this.config.ranges[e].endDate.startOf("day").clone().middleOfDay(), !(this.globals.firstValueSelected = !0) === this.checkRangeContinuity() ? this.fetchInputs() : (this.clearRangeSelection(), this.config.ranges[e].selected = !0, this.config.onrangeselect(this, this.config.ranges[e]), this.reDrawCalendars(), this.setViewport()), this.stopBubbling(t), !1
            }
        },
        setViewport: function () {
            if (!0 === this.globals.isMobile) "none" !== this.input.css("display") && this.container.trigger("calentim:resize");
            else {
                if ("none" !== this.container.css("display") && this.globals.initComplete && !1 === this.globals.isMobile && !1 === this.config.inline) {
                    var t = this.getViewport();
                    switch (this.config.showOn) {
                        case "top":
                            this.config.autoAlign ? this.positionOnTopAlign(t) : this.positionOnTop(!1, t);
                            break;
                        case "left":
                            this.config.autoAlign ? this.positionOnLeftAlign(t) : this.positionOnLeft(!1, t);
                            break;
                        case "right":
                            this.config.autoAlign ? this.positionOnRightAlign(t) : this.positionOnRight(!1, t);
                            break;
                        case "bottom":
                            this.config.autoAlign ? this.positionOnBottomAlign(t) : this.positionOnBottom(!1, t);
                            break;
                        case "center":
                            this.positionOnCenter(t);
                            break;
                        default:
                            this.config.autoAlign ? this.positionOnBottomAlign(t) : this.positionOnBottom(!1, t)
                    }
                }
                if ("horizontal" !== this.config.rangeOrientation) {
                    var e = this.input.find(".calentim-header").outerHeight() + this.input.find(".calentim-calendars").outerHeight() + (0 < this.input.find(".calentim-footer").length ? this.input.find(".calentim-footer").outerHeight() : 0) + (0 < this.input.find(".calentim-timepickers").length ? this.input.find(".calentim-timepickers").outerHeight() : 0);
                    this.input.find(".calentim-right").css("max-height", e)
                }
            }
        },
        getDropdownPos: function (t) {
            var e = this.getDimensions(this.$elem, !0),
                i = this.getDimensions(this.container, !0),
                n = parseInt(this.input.css("margin-left"), 10),
                a = parseFloat(this.container.find("div[class*='calentim-box-arrow']").first().outerHeight() / 2);
            switch (t) {
                case "left":
                    switch (this.config.arrowOn) {
                        case "top":
                            return {
                                top: e.offsetTop - n - a - e.height / 2,
                                left: e.offsetLeft - i.width - n,
                                arrow: 0
                            };
                        case "center":
                            return {
                                top: e.offsetTop - n - i.height / 2,
                                left: e.offsetLeft - i.width - n,
                                arrow: (i.height - 2 * a) / 2 - e.height / 2
                            };
                        case "bottom":
                            return {
                                top: e.offsetTop - i.height + e.height + 2 * n + a,
                                left: e.offsetLeft - i.width - n,
                                arrow: i.height - 4 * a - 3 * n - e.height / 2
                            };
                        default:
                            return {
                                top: e.offsetTop - n - a - e.height / 2,
                                left: e.offsetLeft - i.width - n,
                                arrow: 0
                            }
                    }
                    break;
                case "right":
                    switch (this.config.arrowOn) {
                        case "top":
                            return {
                                top: e.offsetTop - n - a - e.height / 2,
                                left: e.offsetLeft + e.width + n,
                                arrow: 0
                            };
                        case "center":
                            return {
                                top: e.offsetTop - n - i.height / 2,
                                left: e.offsetLeft + e.width + n,
                                arrow: (i.height - 2 * a) / 2 - e.height / 2
                            };
                        case "bottom":
                            return {
                                top: e.offsetTop - i.height + e.height + 2 * n + a,
                                left: e.offsetLeft + e.width + n,
                                arrow: i.height - 4 * a - 3 * n - e.height / 2
                            };
                        default:
                            return {
                                top: e.offsetTop - n - a - e.height / 2,
                                left: e.offsetLeft + e.width + n,
                                arrow: 0
                            }
                    }
                    break;
                case "top":
                    switch (this.config.arrowOn) {
                        case "left":
                            return {
                                top: e.offsetTop - i.height - n,
                                left: e.offsetLeft - n,
                                arrow: 0
                            };
                        case "center":
                            return {
                                top: e.offsetTop - i.height - n,
                                left: e.offsetLeft - (i.width - 2 * n - e.width) / 2,
                                arrow: (i.width - 5 * a) / 2
                            };
                        case "right":
                            return {
                                top: e.offsetTop - i.height - n,
                                left: e.offsetLeft - (i.width - e.width) + n,
                                arrow: i.width - 5 * a + n
                            };
                        default:
                            return {
                                top: e.offsetTop - i.height - n,
                                left: e.offsetLeft - n,
                                arrow: 0
                            }
                    }
                    break;
                case "bottom":
                    switch (this.config.arrowOn) {
                        case "left":
                            return {
                                top: e.offsetTop + e.height - n + a,
                                left: e.offsetLeft - n,
                                arrow: 0
                            };
                        case "center":
                            return {
                                top: e.offsetTop + e.height - n + a,
                                left: e.offsetLeft - (i.width - 2 * n - e.width) / 2,
                                arrow: (i.width - 5 * a) / 2
                            };
                        case "right":
                            return {
                                top: e.offsetTop + e.height - n + a,
                                left: e.offsetLeft - (i.width - e.width) + n,
                                arrow: i.width - 5 * a + n
                            };
                        default:
                            return {
                                top: e.offsetTop + e.height - n + a,
                                left: e.offsetLeft - n,
                                arrow: 0
                            }
                    }
                    break;
                case "center":
                    switch (this.config.arrowOn) {
                        case "center":
                            return {
                                top: e.offsetTop - n - i.height / 2,
                                left: e.offsetLeft - (i.width - 2 * n - e.width) / 2
                            }
                    }
            }
        },
        positionOnTop: function (t, e) {
            var i = this.getDropdownPos("top");
            if (t) return i;
            this.container.css({
                left: i.left,
                top: i.top
            }), this.container.find("div[class*='calentim-box-arrow-']").css({
                marginLeft: i.arrow
            }).attr("class", "calentim-box-arrow-bottom")
        },
        positionOnBottom: function (t, e) {
            var i = this.getDropdownPos("bottom");
            if (t) return i;
            this.container.css({
                left: i.left,
                top: i.top
            }), this.container.find("div[class*='calentim-box-arrow-']").attr("class", "calentim-box-arrow-top").css({
                marginLeft: i.arrow
            })
        },
        positionOnLeft: function (t, e) {
            var i = this.getDropdownPos("left");
            if (t) return i;
            this.container.css({
                left: i.left,
                top: i.top
            }), this.container.children("div[class*='calentim-box-arrow-']").attr("class", "calentim-box-arrow-right").css({
                marginTop: i.arrow
            })
        },
        positionOnRight: function (t, e) {
            var i = this.getDropdownPos("right");
            if (t) return i;
            this.container.css({
                left: i.left,
                top: i.top
            }), this.container.children("div[class*='calentim-box-arrow-']").attr("class", "calentim-box-arrow-left").css({
                marginTop: i.arrow
            })
        },
        positionOnCenter: function (t) {
            var e = this.getDropdownPos("center"),
                i = Math.max(e.left + this.container[0].clientWidth - (t.right - 30), 0),
                n = Math.max(e.top + this.container[0].clientHeight - (t.bottom - 30), 0);
            this.config.autoAlign || (n = i = 0), e.left -= i, e.top -= n, this.container.css({
                left: e.left,
                top: e.top
            }), this.container.find("div[class*='calentim-box-arrow-']").remove()
        },
        positionOnBottomAlign: function (t) {
            var e = this.positionOnBottom(!0, t),
                i = this.getDimensions(this.container);
            e.top + i.height < t.bottom ? this.positionOnBottom(!1, t) : this.positionOnTop(!1, t)
        },
        positionOnLeftAlign: function (t) {
            this.positionOnLeft(!0, t).left > t.left - 50 ? this.positionOnLeft(!1, t) : this.positionOnRight(!1, t)
        },
        positionOnRightAlign: function (t) {
            var e = this.positionOnRight(!0, t),
                i = this.getDimensions(this.container);
            e.left + i.width < t.right + 50 ? this.positionOnRight(!1, t) : this.positionOnLeft(!1, t)
        },
        positionOnTopAlign: function (t) {
            this.positionOnTop(!0, t).top > t.top ? this.positionOnTop(!1, t) : this.positionOnBottom(!1, t)
        },
        getDimensions: function (t, e) {
            var i = r.body,
                n = t[0],
                a = t.offset();
            if (t === this.$elem && !1 === this.globals.parentScrollEventsAttached) {
                var s = u.proxy(function () {
                    this.globals.isTicking || (this.globals.isTicking = !0, this.globals.rafID = this.requestAnimFrame(u.proxy(function () {
                        this.setViewport(), this.cancelAnimFrame(this.globals.rafID), this.globals.isTicking = !1
                    }, this)))
                }, this);
                if (n !== i)
                    for (var o = n.parentNode; o !== i && null !== o;) o.scrollHeight > o.offsetHeight && u(o).off("scroll.calentim").on("scroll.calentim", s), o = o.parentNode;
                this.globals.parentScrollEventsAttached = !0
            }
            return {
                width: n.offsetWidth,
                height: n.offsetHeight,
                offsetLeft: a.left,
                offsetTop: a.top
            }
        },
        getViewport: function () {
            var t = this.globals.lastScrollY,
                e = this.globals.lastScrollX,
                i = t + o.innerHeight;
            return {
                top: t,
                left: e,
                right: e + o.innerWidth,
                bottom: i
            }
        },
        attachEvents: function () {
            var t = u.proxy(this.drawNextMonth, this),
                e = u.proxy(this.drawPrevMonth, this),
                i = u.proxy(this.cellClicked, this),
                n = u.proxy(this.cellHovered, this),
                a = u.proxy(this.rangeClicked, this),
                s = u.proxy(this.monthSwitchClicked, this),
                o = u.proxy(this.yearSwitchClicked, this),
                r = "click.calentim";
            if (this.container.find(".calentim-next").off(r).one(r, t), this.container.find(".calentim-prev").off(r).one(r, e), this.container.find(".calentim-day").off(r).on(r, i), this.container.find(".calentim-day").off("mouseover.calentim").on("mouseover.calentim", n), this.container.find(".calentim-disabled").not(".calentim-day").off(r), this.container.find(".calentim-range").off(r).on(r, a), this.container.find(".calentim-month-switch ").off(r).on(r, s), this.container.find(".calentim-year-switch ").off(r).on(r, o), !0 === this.globals.isMobile)
                if ("function" == typeof u.fn.swiperight) this.input.find(".calentim-calendars").css("touch-action", "none"), this.input.find(".calentim-calendars").on("swipeleft", t), this.input.find(".calentim-calendars").on("swiperight", e);
                else {
                    var l = new Hammer(this.input.find(".calentim-calendars").get(0));
                    l.off("swipeleft").on("swipeleft", t), l.off("swiperight").on("swiperight", e)
                } !this.globals.isMobile && !this.config.showButtons || this.config.inline || (this.input.find(".calentim-cancel").off("click.calentim").on("click.calentim", u.proxy(function (t) {
                    this.config.startDate = this.globals.startDateInitial ? this.globals.startDateInitial.clone() : null, this.config.endDate = this.globals.endDateInitial ? this.globals.endDateInitial.clone() : null, this.config.startEmpty && !this.globals.startDateInitial && this.clearInput(), this.updateTimePickerDisplay(), this.updateInput(!1, !1), this.hideDropdown(t)
                }, this)), this.input.find(".calentim-apply").off("click.calentim").on("click.calentim", u.proxy(function (t) {
                    this.config.startDate = this.config.startDate || moment(), this.config.endDate = this.config.endDate || moment(), !0 === this.config.onbeforeselect(this, this.config.startDate.clone(), this.config.endDate.clone()) && !0 === this.checkRangeContinuity() ? (this.globals.firstValueSelected = !0, this.globals.delayInputUpdate ? (this.globals.delayInputUpdate = !1, this.updateInput(!0, !1), this.clearRangeSelection(), this.globals.delayInputUpdate = !0) : this.updateInput(!0, !1)) : this.fetchInputs(), this.hideDropdown(t)
                }, this)))
        },
        addInitialEvents: function () {
            var e = this,
                t = "click.calentim";
            this.globals.documentEvent = t + "_" + Math.round((new Date).getTime() + 100 * Math.random()), u(r).on(this.globals.documentEvent, u.proxy(function (t) {
                if (!1 === this.globals.isMobile && !1 === this.config.inline) {
                    var e = t || o.event || jQuery.Event("click", {
                        target: "body"
                    });
                    e.target = e.target || e.srcElement, 0 === u(this.container).find(u(e.target)).length && this.elem !== e.target && 0 < this.container.is(":visible") && this.hideDropdown(e)
                }
            }, this)), this.config.enableKeyboard && (t = "click.calentim focus.calentim"), this.$elem.off(t).on(t, u.proxy(this.debounce(function (t) {
                var e = t || o.event || jQuery.Event("click", {
                    target: "body"
                });
                e.target = e.target || e.srcElement, 0 < this.input.get(0).clientHeight && this.config.target.get(0) !== e.target ? this.hideDropdown(e) : (u(r).trigger("click"), this.showDropdown(e))
            }, 200, !0), this)), this.globals.isMobile && u(o).on("resize.calentim", u.proxy(function (t) {
                this.container.trigger("calentim:resize")
            }, this)), this.container.on("calentim:resize", u.proxy(function () {
                this.globals.rafID = this.requestAnimFrame(function () {
                    if (e.config.showCalendars) {
                        var t = e.input.find(".calentim-calendar:visible:first").innerHeight();
                        e.input.removeClass("calentim-input-top-reset"), e.input.find(".calentim-calendars").outerHeight() < t ? e.input.find(".calentim-calendars").css("min-height", t) : e.input.find(".calentim-calendars").css("max-height", t), e.input.position().top < 0 && e.input.addClass("calentim-input-top-reset"), u(o).width() > u(o).height() ? "flex" === e.input.css("display") && (0 < e.input.find(".calentim-header:visible").length ? e.input.css("height", t + e.input.find(".calentim-header").outerHeight() + 2 + "px") : e.input.css("height", t + 2 + "px")) : e.input.css("height", "auto")
                    } else e.input.css("height", "auto");
                    e.updateTimePickerDisplay(), e.cancelAnimFrame(e.globals.rafID)
                })
            }, this)), "none" !== this.input.css("display") && this.globals.isMobile && this.container.trigger("calentim:resize"), !1 === this.globals.isMobile && u(o).on("resize.calentim scroll.calentim", function () {
                e.globals.isTicking || (e.globals.isTicking = !0, e.globals.lastScrollX = o.scrollX || o.pageXOffset || r.documentElement.scrollLeft, e.globals.lastScrollY = o.scrollY || o.pageYOffset || r.documentElement.scrollTop, e.globals.rafID = e.requestAnimFrame(u.proxy(function () {
                    this.setViewport(), this.globals.isTicking = !1, this.cancelAnimFrame(this.globals.rafID)
                }, e)))
            })
        },
        stopBubbling: function (t) {
            return "function" == typeof t.stopPropagation ? t.stopPropagation() : void 0 !== t.cancelBubble && (t.cancelBubble = !0), "function" == typeof t.preventDefault && t.preventDefault(), t.returnValue = !1
        },
        debounce: function (n, a, s) {
            return function () {
                var t = this,
                    e = arguments,
                    i = s && !t.globals.throttleTimeout;
                clearTimeout(t.globals.throttleTimeout), t.globals.throttleTimeout = setTimeout(function () {
                    t.globals.throttleTimeout = null, s || n.apply(t, e)
                }, a), i && n.apply(t, e)
            }
        },
        requestAnimFrame: function (t) {
            return "function" == typeof o.requestAnimationFrame ? requestAnimationFrame(t) : "function" == typeof o.webkitRequestAnimationFrame ? webkitRequestAnimationFrame(t) : "function" == typeof o.mozRequestAnimationFrame ? mozRequestAnimationFrame(t) : setTimeout(t, 100 / 6)
        },
        cancelAnimFrame: function (t) {
            return "function" == typeof o.cancelAnimationFrame ? cancelAnimationFrame(t) : "function" == typeof o.webkitCancelAnimationFrame ? webkitCancelAnimationFrame(t) : "function" == typeof o.mozCancelAnimationFrame ? mozCancelAnimationFrame(t) : clearTimeout(t)
        },
        addKeyboardEvents: function () {
            if (this.config.enableKeyboard && this.config.showCalendars) {
                var t = u.proxy(function (t) {
                    var e = t.which ? t.which : t.keyCode;
                    null === this.globals.keyboardHoverDate ? null === this.config.startDate ? this.globals.keyboardHoverDate = moment({
                        day: 1,
                        month: this.calendars.first().data("month")
                    }).middleOfDay() : this.globals.keyboardHoverDate = this.config.startDate.clone().middleOfDay() : this.globals.keyboardHoverDate.middleOfDay();
                    var i = !1,
                        n = !1;
                    switch (e) {
                        case 37:
                            this.globals.keyboardHoverDate.add(-1, "day"), n = i = !0;
                            break;
                        case 38:
                            this.globals.keyboardHoverDate.add(-1, "week"), n = i = !0;
                            break;
                        case 39:
                            this.globals.keyboardHoverDate.add(1, "day"), n = i = !0;
                            break;
                        case 40:
                            this.globals.keyboardHoverDate.add(1, "week"), n = i = !0;
                            break;
                        case 32:
                            this.input.find(".calentim-day[data-value='" + this.globals.keyboardHoverDate.middleOfDay().unix() + "']").first().trigger("click.calentim"), n = !(i = !1);
                            break;
                        case 33:
                            t.shiftKey ? this.globals.keyboardHoverDate.add(-1, "years") : this.globals.keyboardHoverDate.add(-1, "months"), n = i = !0;
                            break;
                        case 34:
                            t.shiftKey ? this.globals.keyboardHoverDate.add(1, "years") : this.globals.keyboardHoverDate.add(1, "months"), n = i = !0;
                            break;
                        case 27:
                        case 9:
                            this.hideDropdown(t);
                            break;
                        case 36:
                            t.shiftKey && (this.globals.keyboardHoverDate = moment().middleOfDay(), n = i = !0)
                    }
                    if (i || n) return this.globals.keyboardHoverDate = this.globals.keyboardHoverDate.middleOfDay(), (this.globals.keyboardHoverDate.isBefore(moment.unix(this.input.find(".calentim-day:first").attr("data-value")), "minute") || this.globals.keyboardHoverDate.isAfter(moment.unix(this.input.find(".calentim-day:last").attr("data-value")), "minute")) && (this.globals.currentDate = this.globals.keyboardHoverDate.clone().startOfMonth(), this.reDrawCalendars(), i = !1), i && (this.globals.hoverDate = null, this.reDrawCells()), n && this.stopBubbling(t), !1
                }, this);
                this.$elem.off("keydown.calentim").on("keydown.calentim", t), this.container.off("keydown.calentim").on("keydown.calentim", t)
            }
        },
        destroy: function () {
            this.config.inline ? (this.input.remove(), this.globals.isMobile ? this.$elem.unwrap(".calentim-container-mobile") : this.$elem.unwrap(".calentim-container"), this.elem.type = "text") : this.container.remove(), u(r).off(this.globals.documentEvent), this.$elem.removeData("calentim")
        },
        checkMobile: function () {
            return /(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(navigator.userAgent || navigator.vendor || o.opera) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test((navigator.userAgent || navigator.vendor || o.opera).substr(0, 4))
        },
        setStart: function (t) {
            !1 === this.isDisabled(t) && moment(t).isValid() && (this.config.startDate = moment(t), this.refreshValues())
        },
        setEnd: function (t) {
            !1 === this.isDisabled(t) && moment(t).isValid() && (this.config.endDate = moment(t), this.refreshValues())
        },
        setMinDate: function (t) {
            moment(t).isValid() && (this.config.minDate = moment(t), this.refreshValues())
        },
        setMaxDate: function (t) {
            moment(t).isValid() && (this.config.maxDate = moment(t), this.refreshValues())
        },
        setDisplayDate: function (t) {
            moment(t).isValid() && (this.globals.currentDate = moment(t), this.reDrawCalendars())
        },
        refreshValues: function () {
            var t = this.globals.delayInputUpdate;
            this.globals.delayInputUpdate = !1, this.validateDates(), this.updateTimePickerDisplay(), this.updateInput(), this.globals.delayInputUpdate = t, this.reDrawCells()
        }
    }).defaults, u.fn.calentim = function (t) {
        return this.each(function () {
            new e(this, t).init()
        })
    }, "function" != typeof moment.fn.middleOfDay && (moment.fn.middleOfDay = function () {
        return this.hours(12).minutes(0).seconds(0), this
    }, moment.fn.startOfMonth = function () {
        return this.middleOfDay().date(1), this
    })
}(jQuery, window, document),
    function (s, r, t, p) {
        "use strict";
        var o, l = ["", "webkit", "Moz", "MS", "ms", "o"],
            e = r.createElement("div"),
            i = "function",
            c = Math.round,
            g = Math.abs,
            v = Date.now;

        function h(t, e, i) {
            return setTimeout(b(t, i), e)
        }

        function n(t, e, i) {
            return !!Array.isArray(t) && (d(t, i[e], i), !0)
        }

        function d(t, e, i) {
            var n;
            if (t)
                if (t.forEach) t.forEach(e, i);
                else if (t.length !== p)
                    for (n = 0; n < t.length;) e.call(i, t[n], n, t), n++;
                else
                    for (n in t) t.hasOwnProperty(n) && e.call(i, t[n], n, t)
        }

        function a(n, t, e) {
            var a = "DEPRECATED METHOD: " + t + "\n" + e + " AT \n";
            return function () {
                var t = new Error("get-stack-trace"),
                    e = t && t.stack ? t.stack.replace(/^[^\(]+?[\n$]/gm, "").replace(/^\s+at\s+/gm, "").replace(/^Object.<anonymous>\s*\(/gm, "{anonymous}()@") : "Unknown Stack Trace",
                    i = s.console && (s.console.warn || s.console.log);
                return i && i.call(s.console, a, e), n.apply(this, arguments)
            }
        }
        o = "function" != typeof Object.assign ? function (t) {
            if (t === p || null === t) throw new TypeError("Cannot convert undefined or null to object");
            for (var e = Object(t), i = 1; i < arguments.length; i++) {
                var n = arguments[i];
                if (n !== p && null !== n)
                    for (var a in n) n.hasOwnProperty(a) && (e[a] = n[a])
            }
            return e
        } : Object.assign;
        var f = a(function (t, e, i) {
            for (var n = Object.keys(e), a = 0; a < n.length;)(!i || i && t[n[a]] === p) && (t[n[a]] = e[n[a]]), a++;
            return t
        }, "extend", "Use `assign`."),
            m = a(function (t, e) {
                return f(t, e, !0)
            }, "merge", "Use `assign`.");

        function u(t, e, i) {
            var n, a = e.prototype;
            (n = t.prototype = Object.create(a)).constructor = t, n._super = a, i && o(n, i)
        }

        function b(t, e) {
            return function () {
                return t.apply(e, arguments)
            }
        }

        function y(t, e) {
            return typeof t == i ? t.apply(e && e[0] || p, e) : t
        }

        function D(t, e) {
            return t === p ? e : t
        }

        function w(e, t, i) {
            d(S(t), function (t) {
                e.addEventListener(t, i, !1)
            })
        }

        function k(e, t, i) {
            d(S(t), function (t) {
                e.removeEventListener(t, i, !1)
            })
        }

        function T(t, e) {
            for (; t;) {
                if (t == e) return !0;
                t = t.parentNode
            }
            return !1
        }

        function x(t, e) {
            return -1 < t.indexOf(e)
        }

        function S(t) {
            return t.trim().split(/\s+/g)
        }

        function O(t, e, i) {
            if (t.indexOf && !i) return t.indexOf(e);
            for (var n = 0; n < t.length;) {
                if (i && t[n][i] == e || !i && t[n] === e) return n;
                n++
            }
            return -1
        }

        function E(t) {
            return Array.prototype.slice.call(t, 0)
        }

        function C(t, i, e) {
            for (var n = [], a = [], s = 0; s < t.length;) {
                var o = i ? t[s][i] : t[s];
                O(a, o) < 0 && n.push(t[s]), a[s] = o, s++
            }
            return e && (n = i ? n.sort(function (t, e) {
                return t[i] > e[i]
            }) : n.sort()), n
        }

        function M(t, e) {
            for (var i, n, a = e[0].toUpperCase() + e.slice(1), s = 0; s < l.length;) {
                if ((n = (i = l[s]) ? i + a : e) in t) return n;
                s++
            }
            return p
        }
        var I = 1;

        function A(t) {
            var e = t.ownerDocument || t;
            return e.defaultView || e.parentWindow || s
        }
        var P = "ontouchstart" in s,
            H = M(s, "PointerEvent") !== p,
            B = P && /mobile|tablet|ip(ad|hone|od)|android/i.test(navigator.userAgent),
            R = "touch",
            V = "mouse",
            z = 25,
            F = 1,
            L = 4,
            _ = 8,
            N = 1,
            W = 2,
            Y = 4,
            X = 8,
            q = 16,
            U = W | Y,
            j = X | q,
            $ = U | j,
            K = ["x", "y"],
            G = ["clientX", "clientY"];

        function Q(e, t) {
            var i = this;
            this.manager = e, this.callback = t, this.element = e.element, this.target = e.options.inputTarget, this.domHandler = function (t) {
                y(e.options.enable, [e]) && i.handler(t)
            }, this.init()
        }

        function Z(t, e, i) {
            var n = i.pointers.length,
                a = i.changedPointers.length,
                s = e & F && n - a == 0,
                o = e & (L | _) && n - a == 0;
            i.isFirst = !!s, i.isFinal = !!o, s && (t.session = {}), i.eventType = e,
                function (t, e) {
                    var i = t.session,
                        n = e.pointers,
                        a = n.length;
                    i.firstInput || (i.firstInput = J(e));
                    1 < a && !i.firstMultiple ? i.firstMultiple = J(e) : 1 === a && (i.firstMultiple = !1);
                    var s = i.firstInput,
                        o = i.firstMultiple,
                        r = o ? o.center : s.center,
                        l = e.center = tt(n);
                    e.timeStamp = v(), e.deltaTime = e.timeStamp - s.timeStamp, e.angle = at(r, l), e.distance = nt(r, l),
                        function (t, e) {
                            var i = e.center,
                                n = t.offsetDelta || {},
                                a = t.prevDelta || {},
                                s = t.prevInput || {};
                            e.eventType !== F && s.eventType !== L || (a = t.prevDelta = {
                                x: s.deltaX || 0,
                                y: s.deltaY || 0
                            }, n = t.offsetDelta = {
                                x: i.x,
                                y: i.y
                            });
                            e.deltaX = a.x + (i.x - n.x), e.deltaY = a.y + (i.y - n.y)
                        }(i, e), e.offsetDirection = it(e.deltaX, e.deltaY);
                    var c = et(e.deltaTime, e.deltaX, e.deltaY);
                    e.overallVelocityX = c.x, e.overallVelocityY = c.y, e.overallVelocity = g(c.x) > g(c.y) ? c.x : c.y, e.scale = o ? (f = o.pointers, m = n, nt(m[0], m[1], G) / nt(f[0], f[1], G)) : 1, e.rotation = o ? (h = o.pointers, d = n, at(d[1], d[0], G) + at(h[1], h[0], G)) : 0, e.maxPointers = i.prevInput ? e.pointers.length > i.prevInput.maxPointers ? e.pointers.length : i.prevInput.maxPointers : e.pointers.length,
                        function (t, e) {
                            var i, n, a, s, o = t.lastInterval || e,
                                r = e.timeStamp - o.timeStamp;
                            if (e.eventType != _ && (z < r || o.velocity === p)) {
                                var l = e.deltaX - o.deltaX,
                                    c = e.deltaY - o.deltaY,
                                    h = et(r, l, c);
                                n = h.x, a = h.y, i = g(h.x) > g(h.y) ? h.x : h.y, s = it(l, c), t.lastInterval = e
                            } else i = o.velocity, n = o.velocityX, a = o.velocityY, s = o.direction;
                            e.velocity = i, e.velocityX = n, e.velocityY = a, e.direction = s
                        }(i, e);
                    var h, d;
                    var f, m;
                    var u = t.element;
                    T(e.srcEvent.target, u) && (u = e.srcEvent.target);
                    e.target = u
                }(t, i), t.emit("hammer.input", i), t.recognize(i), t.session.prevInput = i
        }

        function J(t) {
            for (var e = [], i = 0; i < t.pointers.length;) e[i] = {
                clientX: c(t.pointers[i].clientX),
                clientY: c(t.pointers[i].clientY)
            }, i++;
            return {
                timeStamp: v(),
                pointers: e,
                center: tt(e),
                deltaX: t.deltaX,
                deltaY: t.deltaY
            }
        }

        function tt(t) {
            var e = t.length;
            if (1 === e) return {
                x: c(t[0].clientX),
                y: c(t[0].clientY)
            };
            for (var i = 0, n = 0, a = 0; a < e;) i += t[a].clientX, n += t[a].clientY, a++;
            return {
                x: c(i / e),
                y: c(n / e)
            }
        }

        function et(t, e, i) {
            return {
                x: e / t || 0,
                y: i / t || 0
            }
        }

        function it(t, e) {
            return t === e ? N : g(t) >= g(e) ? t < 0 ? W : Y : e < 0 ? X : q
        }

        function nt(t, e, i) {
            i || (i = K);
            var n = e[i[0]] - t[i[0]],
                a = e[i[1]] - t[i[1]];
            return Math.sqrt(n * n + a * a)
        }

        function at(t, e, i) {
            i || (i = K);
            var n = e[i[0]] - t[i[0]],
                a = e[i[1]] - t[i[1]];
            return 180 * Math.atan2(a, n) / Math.PI
        }
        Q.prototype = {
            handler: function () { },
            init: function () {
                this.evEl && w(this.element, this.evEl, this.domHandler), this.evTarget && w(this.target, this.evTarget, this.domHandler), this.evWin && w(A(this.element), this.evWin, this.domHandler)
            },
            destroy: function () {
                this.evEl && k(this.element, this.evEl, this.domHandler), this.evTarget && k(this.target, this.evTarget, this.domHandler), this.evWin && k(A(this.element), this.evWin, this.domHandler)
            }
        };
        var st = {
            mousedown: F,
            mousemove: 2,
            mouseup: L
        },
            ot = "mousedown",
            rt = "mousemove mouseup";

        function lt() {
            this.evEl = ot, this.evWin = rt, this.pressed = !1, Q.apply(this, arguments)
        }
        u(lt, Q, {
            handler: function (t) {
                var e = st[t.type];
                e & F && 0 === t.button && (this.pressed = !0), 2 & e && 1 !== t.which && (e = L), this.pressed && (e & L && (this.pressed = !1), this.callback(this.manager, e, {
                    pointers: [t],
                    changedPointers: [t],
                    pointerType: V,
                    srcEvent: t
                }))
            }
        });
        var ct = {
            pointerdown: F,
            pointermove: 2,
            pointerup: L,
            pointercancel: _,
            pointerout: _
        },
            ht = {
                2: R,
                3: "pen",
                4: V,
                5: "kinect"
            },
            dt = "pointerdown",
            ft = "pointermove pointerup pointercancel";

        function mt() {
            this.evEl = dt, this.evWin = ft, Q.apply(this, arguments), this.store = this.manager.session.pointerEvents = []
        }
        s.MSPointerEvent && !s.PointerEvent && (dt = "MSPointerDown", ft = "MSPointerMove MSPointerUp MSPointerCancel"), u(mt, Q, {
            handler: function (t) {
                var e = this.store,
                    i = !1,
                    n = t.type.toLowerCase().replace("ms", ""),
                    a = ct[n],
                    s = ht[t.pointerType] || t.pointerType,
                    o = s == R,
                    r = O(e, t.pointerId, "pointerId");
                a & F && (0 === t.button || o) ? r < 0 && (e.push(t), r = e.length - 1) : a & (L | _) && (i = !0), r < 0 || (e[r] = t, this.callback(this.manager, a, {
                    pointers: e,
                    changedPointers: [t],
                    pointerType: s,
                    srcEvent: t
                }), i && e.splice(r, 1))
            }
        });
        var ut = {
            touchstart: F,
            touchmove: 2,
            touchend: L,
            touchcancel: _
        };

        function pt() {
            this.evTarget = "touchstart", this.evWin = "touchstart touchmove touchend touchcancel", this.started = !1, Q.apply(this, arguments)
        }
        u(pt, Q, {
            handler: function (t) {
                var e = ut[t.type];
                if (e === F && (this.started = !0), this.started) {
                    var i = function (t, e) {
                        var i = E(t.touches),
                            n = E(t.changedTouches);
                        e & (L | _) && (i = C(i.concat(n), "identifier", !0));
                        return [i, n]
                    }.call(this, t, e);
                    e & (L | _) && i[0].length - i[1].length == 0 && (this.started = !1), this.callback(this.manager, e, {
                        pointers: i[0],
                        changedPointers: i[1],
                        pointerType: R,
                        srcEvent: t
                    })
                }
            }
        });
        var gt = {
            touchstart: F,
            touchmove: 2,
            touchend: L,
            touchcancel: _
        },
            vt = "touchstart touchmove touchend touchcancel";

        function bt() {
            this.evTarget = vt, this.targetIds = {}, Q.apply(this, arguments)
        }
        u(bt, Q, {
            handler: function (t) {
                var e = gt[t.type],
                    i = function (t, e) {
                        var i = E(t.touches),
                            n = this.targetIds;
                        if (e & (2 | F) && 1 === i.length) return n[i[0].identifier] = !0, [i, i];
                        var a, s, o = E(t.changedTouches),
                            r = [],
                            l = this.target;
                        if (s = i.filter(function (t) {
                            return T(t.target, l)
                        }), e === F)
                            for (a = 0; a < s.length;) n[s[a].identifier] = !0, a++;
                        a = 0;
                        for (; a < o.length;) n[o[a].identifier] && r.push(o[a]), e & (L | _) && delete n[o[a].identifier], a++;
                        if (!r.length) return;
                        return [C(s.concat(r), "identifier", !0), r]
                    }.call(this, t, e);
                i && this.callback(this.manager, e, {
                    pointers: i[0],
                    changedPointers: i[1],
                    pointerType: R,
                    srcEvent: t
                })
            }
        });
        var yt = 2500;

        function Dt() {
            Q.apply(this, arguments);
            var t = b(this.handler, this);
            this.touch = new bt(this.manager, t), this.mouse = new lt(this.manager, t), this.primaryTouch = null, this.lastTouches = []
        }

        function wt(t) {
            var e = t.changedPointers[0];
            if (e.identifier === this.primaryTouch) {
                var i = {
                    x: e.clientX,
                    y: e.clientY
                };
                this.lastTouches.push(i);
                var n = this.lastTouches;
                setTimeout(function () {
                    var t = n.indexOf(i); - 1 < t && n.splice(t, 1)
                }, yt)
            }
        }
        u(Dt, Q, {
            handler: function (t, e, i) {
                var n = i.pointerType == R,
                    a = i.pointerType == V;
                if (!(a && i.sourceCapabilities && i.sourceCapabilities.firesTouchEvents)) {
                    if (n) (function (t, e) {
                        t & F ? (this.primaryTouch = e.changedPointers[0].identifier, wt.call(this, e)) : t & (L | _) && wt.call(this, e)
                    }).call(this, e, i);
                    else if (a && function (t) {
                        for (var e = t.srcEvent.clientX, i = t.srcEvent.clientY, n = 0; n < this.lastTouches.length; n++) {
                            var a = this.lastTouches[n],
                                s = Math.abs(e - a.x),
                                o = Math.abs(i - a.y);
                            if (s <= 25 && o <= 25) return !0
                        }
                        return !1
                    }.call(this, i)) return;
                    this.callback(t, e, i)
                }
            },
            destroy: function () {
                this.touch.destroy(), this.mouse.destroy()
            }
        });
        var kt = M(e.style, "touchAction"),
            Tt = kt !== p,
            xt = "compute",
            St = "manipulation",
            Ot = "none",
            Et = "pan-x",
            Ct = "pan-y",
            Mt = function () {
                if (!Tt) return !1;
                var e = {},
                    i = s.CSS && s.CSS.supports;
                return ["auto", "manipulation", "pan-y", "pan-x", "pan-x pan-y", "none"].forEach(function (t) {
                    e[t] = !i || s.CSS.supports("touch-action", t)
                }), e
            }();

        function It(t, e) {
            this.manager = t, this.set(e)
        }
        It.prototype = {
            set: function (t) {
                t == xt && (t = this.compute()), Tt && this.manager.element.style && Mt[t] && (this.manager.element.style[kt] = t), this.actions = t.toLowerCase().trim()
            },
            update: function () {
                this.set(this.manager.options.touchAction)
            },
            compute: function () {
                var e = [];
                return d(this.manager.recognizers, function (t) {
                    y(t.options.enable, [t]) && (e = e.concat(t.getTouchAction()))
                }),
                    function (t) {
                        if (x(t, Ot)) return Ot;
                        var e = x(t, Et),
                            i = x(t, Ct);
                        if (e && i) return Ot;
                        if (e || i) return e ? Et : Ct;
                        if (x(t, St)) return St;
                        return "auto"
                    }(e.join(" "))
            },
            preventDefaults: function (t) {
                var e = t.srcEvent,
                    i = t.offsetDirection;
                if (this.manager.session.prevented) e.preventDefault();
                else {
                    var n = this.actions,
                        a = x(n, Ot) && !Mt[Ot],
                        s = x(n, Ct) && !Mt[Ct],
                        o = x(n, Et) && !Mt[Et];
                    if (a) {
                        var r = 1 === t.pointers.length,
                            l = t.distance < 2,
                            c = t.deltaTime < 250;
                        if (r && l && c) return
                    }
                    if (!o || !s) return a || s && i & U || o && i & j ? this.preventSrc(e) : void 0
                }
            },
            preventSrc: function (t) {
                this.manager.session.prevented = !0, t.preventDefault()
            }
        };
        var At = 1;

        function Pt(t) {
            this.options = o({}, this.defaults, t || {}), this.id = I++ , this.manager = null, this.options.enable = D(this.options.enable, !0), this.state = At, this.simultaneous = {}, this.requireFail = []
        }

        function Ht(t) {
            return 16 & t ? "cancel" : 8 & t ? "end" : 4 & t ? "move" : 2 & t ? "start" : ""
        }

        function Bt(t) {
            return t == q ? "down" : t == X ? "up" : t == W ? "left" : t == Y ? "right" : ""
        }

        function Rt(t, e) {
            var i = e.manager;
            return i ? i.get(t) : t
        }

        function Vt() {
            Pt.apply(this, arguments)
        }

        function zt() {
            Vt.apply(this, arguments), this.pX = null, this.pY = null
        }

        function Ft() {
            Vt.apply(this, arguments)
        }

        function Lt() {
            Pt.apply(this, arguments), this._timer = null, this._input = null
        }

        function _t() {
            Vt.apply(this, arguments)
        }

        function Nt() {
            Vt.apply(this, arguments)
        }

        function Wt() {
            Pt.apply(this, arguments), this.pTime = !1, this.pCenter = !1, this._timer = null, this._input = null, this.count = 0
        }

        function Yt(t, e) {
            return (e = e || {}).recognizers = D(e.recognizers, Yt.defaults.preset), new Xt(t, e)
        }
        Pt.prototype = {
            defaults: {},
            set: function (t) {
                return o(this.options, t), this.manager && this.manager.touchAction.update(), this
            },
            recognizeWith: function (t) {
                if (n(t, "recognizeWith", this)) return this;
                var e = this.simultaneous;
                return e[(t = Rt(t, this)).id] || (e[t.id] = t).recognizeWith(this), this
            },
            dropRecognizeWith: function (t) {
                return n(t, "dropRecognizeWith", this) || (t = Rt(t, this), delete this.simultaneous[t.id]), this
            },
            requireFailure: function (t) {
                if (n(t, "requireFailure", this)) return this;
                var e = this.requireFail;
                return -1 === O(e, t = Rt(t, this)) && (e.push(t), t.requireFailure(this)), this
            },
            dropRequireFailure: function (t) {
                if (n(t, "dropRequireFailure", this)) return this;
                t = Rt(t, this);
                var e = O(this.requireFail, t);
                return -1 < e && this.requireFail.splice(e, 1), this
            },
            hasRequireFailures: function () {
                return 0 < this.requireFail.length
            },
            canRecognizeWith: function (t) {
                return !!this.simultaneous[t.id]
            },
            emit: function (e) {
                var i = this,
                    t = this.state;

                function n(t) {
                    i.manager.emit(t, e)
                }
                t < 8 && n(i.options.event + Ht(t)), n(i.options.event), e.additionalEvent && n(e.additionalEvent), 8 <= t && n(i.options.event + Ht(t))
            },
            tryEmit: function (t) {
                if (this.canEmit()) return this.emit(t);
                this.state = 32
            },
            canEmit: function () {
                for (var t = 0; t < this.requireFail.length;) {
                    if (!(this.requireFail[t].state & (32 | At))) return !1;
                    t++
                }
                return !0
            },
            recognize: function (t) {
                var e = o({}, t);
                if (!y(this.options.enable, [this, e])) return this.reset(), void (this.state = 32);
                56 & this.state && (this.state = At), this.state = this.process(e), 30 & this.state && this.tryEmit(e)
            },
            process: function (t) { },
            getTouchAction: function () { },
            reset: function () { }
        }, u(Vt, Pt, {
            defaults: {
                pointers: 1
            },
            attrTest: function (t) {
                var e = this.options.pointers;
                return 0 === e || t.pointers.length === e
            },
            process: function (t) {
                var e = this.state,
                    i = t.eventType,
                    n = 6 & e,
                    a = this.attrTest(t);
                return n && (i & _ || !a) ? 16 | e : n || a ? i & L ? 8 | e : 2 & e ? 4 | e : 2 : 32
            }
        }), u(zt, Vt, {
            defaults: {
                event: "pan",
                threshold: 10,
                pointers: 1,
                direction: $
            },
            getTouchAction: function () {
                var t = this.options.direction,
                    e = [];
                return t & U && e.push(Ct), t & j && e.push(Et), e
            },
            directionTest: function (t) {
                var e = this.options,
                    i = !0,
                    n = t.distance,
                    a = t.direction,
                    s = t.deltaX,
                    o = t.deltaY;
                return a & e.direction || (e.direction & U ? (a = 0 === s ? N : s < 0 ? W : Y, i = s != this.pX, n = Math.abs(t.deltaX)) : (a = 0 === o ? N : o < 0 ? X : q, i = o != this.pY, n = Math.abs(t.deltaY))), t.direction = a, i && n > e.threshold && a & e.direction
            },
            attrTest: function (t) {
                return Vt.prototype.attrTest.call(this, t) && (2 & this.state || !(2 & this.state) && this.directionTest(t))
            },
            emit: function (t) {
                this.pX = t.deltaX, this.pY = t.deltaY;
                var e = Bt(t.direction);
                e && (t.additionalEvent = this.options.event + e), this._super.emit.call(this, t)
            }
        }), u(Ft, Vt, {
            defaults: {
                event: "pinch",
                threshold: 0,
                pointers: 2
            },
            getTouchAction: function () {
                return [Ot]
            },
            attrTest: function (t) {
                return this._super.attrTest.call(this, t) && (Math.abs(t.scale - 1) > this.options.threshold || 2 & this.state)
            },
            emit: function (t) {
                if (1 !== t.scale) {
                    var e = t.scale < 1 ? "in" : "out";
                    t.additionalEvent = this.options.event + e
                }
                this._super.emit.call(this, t)
            }
        }), u(Lt, Pt, {
            defaults: {
                event: "press",
                pointers: 1,
                time: 251,
                threshold: 9
            },
            getTouchAction: function () {
                return ["auto"]
            },
            process: function (t) {
                var e = this.options,
                    i = t.pointers.length === e.pointers,
                    n = t.distance < e.threshold,
                    a = t.deltaTime > e.time;
                if (this._input = t, !n || !i || t.eventType & (L | _) && !a) this.reset();
                else if (t.eventType & F) this.reset(), this._timer = h(function () {
                    this.state = 8, this.tryEmit()
                }, e.time, this);
                else if (t.eventType & L) return 8;
                return 32
            },
            reset: function () {
                clearTimeout(this._timer)
            },
            emit: function (t) {
                8 === this.state && (t && t.eventType & L ? this.manager.emit(this.options.event + "up", t) : (this._input.timeStamp = v(), this.manager.emit(this.options.event, this._input)))
            }
        }), u(_t, Vt, {
            defaults: {
                event: "rotate",
                threshold: 0,
                pointers: 2
            },
            getTouchAction: function () {
                return [Ot]
            },
            attrTest: function (t) {
                return this._super.attrTest.call(this, t) && (Math.abs(t.rotation) > this.options.threshold || 2 & this.state)
            }
        }), u(Nt, Vt, {
            defaults: {
                event: "swipe",
                threshold: 10,
                velocity: .3,
                direction: U | j,
                pointers: 1
            },
            getTouchAction: function () {
                return zt.prototype.getTouchAction.call(this)
            },
            attrTest: function (t) {
                var e, i = this.options.direction;
                return i & (U | j) ? e = t.overallVelocity : i & U ? e = t.overallVelocityX : i & j && (e = t.overallVelocityY), this._super.attrTest.call(this, t) && i & t.offsetDirection && t.distance > this.options.threshold && t.maxPointers == this.options.pointers && g(e) > this.options.velocity && t.eventType & L
            },
            emit: function (t) {
                var e = Bt(t.offsetDirection);
                e && this.manager.emit(this.options.event + e, t), this.manager.emit(this.options.event, t)
            }
        }), u(Wt, Pt, {
            defaults: {
                event: "tap",
                pointers: 1,
                taps: 1,
                interval: 300,
                time: 250,
                threshold: 9,
                posThreshold: 10
            },
            getTouchAction: function () {
                return [St]
            },
            process: function (t) {
                var e = this.options,
                    i = t.pointers.length === e.pointers,
                    n = t.distance < e.threshold,
                    a = t.deltaTime < e.time;
                if (this.reset(), t.eventType & F && 0 === this.count) return this.failTimeout();
                if (n && a && i) {
                    if (t.eventType != L) return this.failTimeout();
                    var s = !this.pTime || t.timeStamp - this.pTime < e.interval,
                        o = !this.pCenter || nt(this.pCenter, t.center) < e.posThreshold;
                    if (this.pTime = t.timeStamp, this.pCenter = t.center, o && s ? this.count += 1 : this.count = 1, this._input = t, 0 === this.count % e.taps) return this.hasRequireFailures() ? (this._timer = h(function () {
                        this.state = 8, this.tryEmit()
                    }, e.interval, this), 2) : 8
                }
                return 32
            },
            failTimeout: function () {
                return this._timer = h(function () {
                    this.state = 32
                }, this.options.interval, this), 32
            },
            reset: function () {
                clearTimeout(this._timer)
            },
            emit: function () {
                8 == this.state && (this._input.tapCount = this.count, this.manager.emit(this.options.event, this._input))
            }
        }), Yt.VERSION = "2.0.8", Yt.defaults = {
            domEvents: !1,
            touchAction: xt,
            enable: !0,
            inputTarget: null,
            inputClass: null,
            preset: [
                [_t, {
                    enable: !1
                }],
                [Ft, {
                    enable: !1
                },
                    ["rotate"]
                ],
                [Nt, {
                    direction: U
                }],
                [zt, {
                    direction: U
                },
                    ["swipe"]
                ],
                [Wt],
                [Wt, {
                    event: "doubletap",
                    taps: 2
                },
                    ["tap"]
                ],
                [Lt]
            ],
            cssProps: {
                userSelect: "none",
                touchSelect: "none",
                touchCallout: "none",
                contentZooming: "none",
                userDrag: "none",
                tapHighlightColor: "rgba(0,0,0,0)"
            }
        };

        function Xt(t, e) {
            var i;
            this.options = o({}, Yt.defaults, e || {}), this.options.inputTarget = this.options.inputTarget || t, this.handlers = {}, this.session = {}, this.recognizers = [], this.oldCssProps = {}, this.element = t, this.input = new ((i = this).options.inputClass || (H ? mt : B ? bt : P ? Dt : lt))(i, Z), this.touchAction = new It(this, this.options.touchAction), qt(this, !0), d(this.options.recognizers, function (t) {
                var e = this.add(new t[0](t[1]));
                t[2] && e.recognizeWith(t[2]), t[3] && e.requireFailure(t[3])
            }, this)
        }

        function qt(i, n) {
            var a, s = i.element;
            s.style && (d(i.options.cssProps, function (t, e) {
                a = M(s.style, e), n ? (i.oldCssProps[a] = s.style[a], s.style[a] = t) : s.style[a] = i.oldCssProps[a] || ""
            }), n || (i.oldCssProps = {}))
        }
        Xt.prototype = {
            set: function (t) {
                return o(this.options, t), t.touchAction && this.touchAction.update(), t.inputTarget && (this.input.destroy(), this.input.target = t.inputTarget, this.input.init()), this
            },
            stop: function (t) {
                this.session.stopped = t ? 2 : 1
            },
            recognize: function (t) {
                var e = this.session;
                if (!e.stopped) {
                    var i;
                    this.touchAction.preventDefaults(t);
                    var n = this.recognizers,
                        a = e.curRecognizer;
                    (!a || a && 8 & a.state) && (a = e.curRecognizer = null);
                    for (var s = 0; s < n.length;) i = n[s], 2 === e.stopped || a && i != a && !i.canRecognizeWith(a) ? i.reset() : i.recognize(t), !a && 14 & i.state && (a = e.curRecognizer = i), s++
                }
            },
            get: function (t) {
                if (t instanceof Pt) return t;
                for (var e = this.recognizers, i = 0; i < e.length; i++)
                    if (e[i].options.event == t) return e[i];
                return null
            },
            add: function (t) {
                if (n(t, "add", this)) return this;
                var e = this.get(t.options.event);
                return e && this.remove(e), this.recognizers.push(t), (t.manager = this).touchAction.update(), t
            },
            remove: function (t) {
                if (n(t, "remove", this)) return this;
                if (t = this.get(t)) {
                    var e = this.recognizers,
                        i = O(e, t); - 1 !== i && (e.splice(i, 1), this.touchAction.update())
                }
                return this
            },
            on: function (t, e) {
                if (t !== p && e !== p) {
                    var i = this.handlers;
                    return d(S(t), function (t) {
                        i[t] = i[t] || [], i[t].push(e)
                    }), this
                }
            },
            off: function (t, e) {
                if (t !== p) {
                    var i = this.handlers;
                    return d(S(t), function (t) {
                        e ? i[t] && i[t].splice(O(i[t], e), 1) : delete i[t]
                    }), this
                }
            },
            emit: function (t, e) {
                var i, n, a;
                this.options.domEvents && (i = t, n = e, (a = r.createEvent("Event")).initEvent(i, !0, !0), (a.gesture = n).target.dispatchEvent(a));
                var s = this.handlers[t] && this.handlers[t].slice();
                if (s && s.length) {
                    e.type = t, e.preventDefault = function () {
                        e.srcEvent.preventDefault()
                    };
                    for (var o = 0; o < s.length;) s[o](e), o++
                }
            },
            destroy: function () {
                this.element && qt(this, !1), this.handlers = {}, this.session = {}, this.input.destroy(), this.element = null
            }
        }, o(Yt, {
            INPUT_START: F,
            INPUT_MOVE: 2,
            INPUT_END: L,
            INPUT_CANCEL: _,
            STATE_POSSIBLE: At,
            STATE_BEGAN: 2,
            STATE_CHANGED: 4,
            STATE_ENDED: 8,
            STATE_RECOGNIZED: 8,
            STATE_CANCELLED: 16,
            STATE_FAILED: 32,
            DIRECTION_NONE: N,
            DIRECTION_LEFT: W,
            DIRECTION_RIGHT: Y,
            DIRECTION_UP: X,
            DIRECTION_DOWN: q,
            DIRECTION_HORIZONTAL: U,
            DIRECTION_VERTICAL: j,
            DIRECTION_ALL: $,
            Manager: Xt,
            Input: Q,
            TouchAction: It,
            TouchInput: bt,
            MouseInput: lt,
            PointerEventInput: mt,
            TouchMouseInput: Dt,
            SingleTouchInput: pt,
            Recognizer: Pt,
            AttrRecognizer: Vt,
            Tap: Wt,
            Pan: zt,
            Swipe: Nt,
            Pinch: Ft,
            Rotate: _t,
            Press: Lt,
            on: w,
            off: k,
            each: d,
            merge: m,
            extend: f,
            assign: o,
            inherit: u,
            bindFn: b,
            prefixed: M
        }), (void 0 !== s ? s : "undefined" != typeof self ? self : {}).Hammer = Yt, "function" == typeof define && define.amd ? define(function () {
            return Yt
        }) : "undefined" != typeof module && module.exports ? module.exports = Yt : s.Hammer = Yt
    }(window, document);
//# sourceMappingURL=calentim.min.js.map